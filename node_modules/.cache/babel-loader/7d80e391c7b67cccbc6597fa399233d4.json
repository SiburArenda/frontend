{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Dropdown.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SelectList from \"./SelectList\";\n\nclass Dropdown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSelect: false,\n      chosen: this.props.options[0]\n    };\n\n    this.choose = option => {\n      this.setState({\n        chosen: option,\n        showSelect: false\n      });\n      this.props.onChoose(option);\n    };\n  }\n\n  handleClickOutside(e) {\n    if (!e.target.path.includes(selectList)) {\n      this.setState({\n        showSelect: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dropdown hover-text\",\n      onClick: () => {\n        if (!this.props.withButton) this.openSelect();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, this.props.header === '' ? this.state.chosen.rusName : this.props.header, this.props.withButton ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"open-select-btn\",\n      onClick: () => this.openSelect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"jopa\") : null, this.state.showSelect ? /*#__PURE__*/React.createElement(SelectList, {\n      options: this.props.options,\n      onChoose: this.choose,\n      clickOutside: this.handleClickOutside,\n      left: this.props.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }) : null);\n  }\n\n  openSelect() {\n    this.setState({\n      showSelect: !this.state.showSelect\n    });\n  }\n\n}\n\nDropdown.propTypes = {\n  header: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChoose: PropTypes.func.isRequired,\n  withButton: PropTypes.bool.isRequired,\n  left: PropTypes.number.isRequired\n};\nexport default Dropdown;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Dropdown.js"],"names":["React","Component","PropTypes","SelectList","Dropdown","state","showSelect","chosen","props","options","choose","option","setState","onChoose","handleClickOutside","e","target","path","includes","selectList","render","withButton","openSelect","header","rusName","left","propTypes","string","isRequired","array","func","bool","number"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BI,KAF6B,GAErB;AACJC,MAAAA,UAAU,EAAE,KADR;AAEJC,MAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB;AAFJ,KAFqB;;AAAA,SAmD7BC,MAnD6B,GAmDnBC,MAAD,IAAY;AACjB,WAAKC,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAEI,MADE;AAEVL,QAAAA,UAAU,EAAE;AAFF,OAAd;AAIA,WAAKE,KAAL,CAAWK,QAAX,CAAoBF,MAApB;AACH,KAzD4B;AAAA;;AAO7BG,EAAAA,kBAAkB,CAACC,CAAD,EAAI;AAClB,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,IAAT,CAAcC,QAAd,CAAuBC,UAAvB,CAAL,EAAyC;AACrC,WAAKP,QAAL,CAAc;AACVN,QAAAA,UAAU,EAAE;AADF,OAAd;AAGH;AACJ;;AAEDc,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,SAAS,EAAC,qBADd;AAEI,MAAA,OAAO,EAAE,MAAM;AAAC,YAAI,CAAC,KAAKZ,KAAL,CAAWa,UAAhB,EAA4B,KAAKC,UAAL;AAAkB,OAFlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,KAAKd,KAAL,CAAWe,MAAX,KAAsB,EAAtB,GAA2B,KAAKlB,KAAL,CAAWE,MAAX,CAAkBiB,OAA7C,GAAuD,KAAKhB,KAAL,CAAWe,MAJvE,EAKK,KAAKf,KAAL,CAAWa,UAAX,gBAEG;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,GAQK,IAbV,EAcK,KAAKjB,KAAL,CAAWC,UAAX,gBAEG,oBAAC,UAAD;AACI,MAAA,OAAO,EAAE,KAAKE,KAAL,CAAWC,OADxB;AAEI,MAAA,QAAQ,EAAE,KAAKC,MAFnB;AAGI,MAAA,YAAY,EAAE,KAAKI,kBAHvB;AAII,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWiB,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,GAQK,IAtBV,CADJ;AA2BH;;AAEDH,EAAAA,UAAU,GAAG;AACT,SAAKV,QAAL,CAAc;AACVN,MAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADd,KAAd;AAGH;;AAjD4B;;AA4DjCF,QAAQ,CAACsB,SAAT,GAAqB;AACjBH,EAAAA,MAAM,EAAErB,SAAS,CAACyB,MAAV,CAAiBC,UADR;AAEjBnB,EAAAA,OAAO,EAAEP,SAAS,CAAC2B,KAAV,CAAgBD,UAFR;AAGjBf,EAAAA,QAAQ,EAAEX,SAAS,CAAC4B,IAAV,CAAeF,UAHR;AAIjBP,EAAAA,UAAU,EAAEnB,SAAS,CAAC6B,IAAV,CAAeH,UAJV;AAKjBH,EAAAA,IAAI,EAAEvB,SAAS,CAAC8B,MAAV,CAAiBJ;AALN,CAArB;AAQA,eAAexB,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SelectList from \"./SelectList\";\r\n\r\nclass Dropdown extends Component {\r\n\r\n    state = {\r\n        showSelect: false,\r\n        chosen: this.props.options[0]\r\n    };\r\n\r\n    handleClickOutside(e) {\r\n        if (!e.target.path.includes(selectList)) {\r\n            this.setState({\r\n                showSelect: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span\r\n                className='dropdown hover-text'\r\n                onClick={() => {if (!this.props.withButton) this.openSelect()}}\r\n            >\r\n                {this.props.header === '' ? this.state.chosen.rusName : this.props.header}\r\n                {this.props.withButton\r\n                    ?\r\n                    <button\r\n                        className='open-select-btn'\r\n                        onClick={() => this.openSelect()}\r\n                    >\r\n                        jopa\r\n                    </button>\r\n                    : null}\r\n                {this.state.showSelect\r\n                    ?\r\n                    <SelectList\r\n                        options={this.props.options}\r\n                        onChoose={this.choose}\r\n                        clickOutside={this.handleClickOutside}\r\n                        left={this.props.left}\r\n                    />\r\n                    : null\r\n                }\r\n            </span>\r\n        );\r\n    }\r\n\r\n    openSelect() {\r\n        this.setState({\r\n            showSelect: !this.state.showSelect\r\n        })\r\n    }\r\n\r\n    choose = (option) => {\r\n        this.setState({\r\n            chosen: option,\r\n            showSelect: false\r\n        });\r\n        this.props.onChoose(option);\r\n    }\r\n}\r\n\r\nDropdown.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    onChoose: PropTypes.func.isRequired,\r\n    withButton: PropTypes.bool.isRequired,\r\n    left: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}