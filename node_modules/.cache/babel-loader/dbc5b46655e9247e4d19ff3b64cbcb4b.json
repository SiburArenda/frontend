{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\SelectList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SelectList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.pos = {\n      left: this.props.left != null ? this.props.left + 'px' : 'auto',\n      top: this.props.top != null ? this.props.top + 'px' : 'auto'\n    };\n\n    this.choose = option => {\n      this.props.closeHint();\n      this.props.onChoose(option);\n    };\n\n    this.fullNameHint = (e, rusName) => {\n      const textLine = document.getElementById(rusName);\n\n      if (textLine.scrollWidth > textLine.clientWidth) {\n        this.props.showHint(e, 'fullName&' + rusName);\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.props.clickOutside, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.props.clickOutside, false);\n  }\n\n  render() {\n    const popup = this.props.options.map(option => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: option.rusName,\n        className: \"hover-text select-item\",\n        id: option.rusName,\n        onClick: () => {\n          this.choose(option);\n        },\n        onMouseEnter: e => this.fullNameHint(e, option.rusName),\n        onMouseLeave: () => this.props.closeHint(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, option.rusName, option.additional);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-popup\",\n      style: this.pos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, popup);\n  }\n\n}\n\nSelectList.propTypes = {\n  options: PropTypes.array.isRequired,\n  onChoose: PropTypes.func.isRequired,\n  clickOutside: PropTypes.func.isRequired,\n  showHint: PropTypes.func.isRequired,\n  closeHint: PropTypes.func.isRequired,\n  left: PropTypes.number,\n  top: PropTypes.number\n};\nexport default SelectList;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/SelectList.js"],"names":["React","Component","PropTypes","SelectList","pos","left","props","top","choose","option","closeHint","onChoose","fullNameHint","e","rusName","textLine","document","getElementById","scrollWidth","clientWidth","showHint","componentDidMount","addEventListener","clickOutside","componentWillUnmount","removeEventListener","render","popup","options","map","additional","propTypes","array","isRequired","func","number"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SelectList extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.props.clickOutside, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.props.clickOutside, false);\r\n    }\r\n\r\n    pos = {\r\n        left: this.props.left != null ? this.props.left + 'px' : 'auto',\r\n        top: this.props.top != null ? this.props.top + 'px' : 'auto'\r\n    };\r\n\r\n    choose = (option) => {\r\n        this.props.closeHint();\r\n        this.props.onChoose(option);\r\n    };\r\n\r\n    render() {\r\n        const popup = this.props.options.map((option) => {\r\n            return (\r\n                <p\r\n                    key={option.rusName}\r\n                    className='hover-text select-item'\r\n                    id={option.rusName}\r\n                    onClick={() => {this.choose(option)}}\r\n                    onMouseEnter={e => this.fullNameHint(e, option.rusName)}\r\n                    onMouseLeave={() => this.props.closeHint()}\r\n                >\r\n                    {option.rusName}\r\n                    {option.additional}\r\n                </p>\r\n            );\r\n        });\r\n        return (\r\n            <div className='select-popup' style={this.pos}>\r\n                {popup}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    fullNameHint = (e, rusName) => {\r\n        const textLine = document.getElementById(rusName);\r\n        if (textLine.scrollWidth > textLine.clientWidth) {\r\n            this.props.showHint(e, 'fullName&' + rusName)\r\n        }\r\n    }\r\n}\r\n\r\nSelectList.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onChoose: PropTypes.func.isRequired,\r\n    clickOutside: PropTypes.func.isRequired,\r\n    showHint: PropTypes.func.isRequired,\r\n    closeHint: PropTypes.func.isRequired,\r\n    left: PropTypes.number,\r\n    top: PropTypes.number\r\n};\r\n\r\nexport default SelectList;"]},"metadata":{},"sourceType":"module"}