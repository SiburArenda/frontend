{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport '../resource/styles/Calendar.css';\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedDays: [],\n      lastChosenWithShift: null\n    };\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => this.state.dateContext.format(\"MMMM\");\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.currentDay = () => this.state.dateContext.format(\"D\");\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.moveMonth = side => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(side, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.SelectList = props => {\n      const popup = props.monthList.map(monthName => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: monthName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          onClick: () => {\n            this.setMonth(monthName);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, monthName));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, popup);\n    };\n\n    this.onChangeMonth = () => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.MonthNav = () => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        id: \"month-nav\",\n        onClick: () => {\n          this.onChangeMonth();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, this.month(), this.state.showMonthPopup ? /*#__PURE__*/React.createElement(this.SelectList, {\n        monthList: this.months,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 23\n        }\n      }) : null);\n    };\n\n    this.showYearEditor = () => {\n      this.setState({\n        showYearNav: !this.state.showYearNav\n      });\n    };\n\n    this.setYear = e => {\n      const userInput = e.target.value;\n\n      if (/\\d+/.test(userInput)) {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", e.target.value);\n        this.setState({\n          dateContext: dateContext\n        });\n      }\n    };\n\n    this.onKeyUpYear = e => {\n      if (e.which === 13 || e.which === 27) {\n        this.setYear(e);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n\n    this.YearNav = () => {\n      return this.state.showYearNav ? /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: this.year(),\n        onKeyUp: e => this.onKeyUpYear(e),\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-element\",\n        onClick: () => {\n          this.showYearEditor();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, \"OK\")) : /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => {\n          this.showYearEditor();\n        },\n        id: \"year-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, this.year());\n    };\n\n    this.onDayClick = (e, day) => {\n      if (e.shiftKey) {\n        const addition = [];\n\n        if (this.state.lastChosenWithShift === null) {\n          if (!this.state.selectedDays.includes(day)) {\n            addition.push(day);\n          }\n\n          this.setState({\n            lastChosenWithShift: day,\n            selectedDays: [...this.state.selectedDays, ...addition]\n          });\n        } else {\n          for (let i = this.state.lastChosenWithShift + 1; i <= day; i++) {\n            if (!this.state.selectedDays.includes(i)) {\n              addition.push(i);\n            }\n          }\n\n          this.setState({\n            lastChosenWithShift: null,\n            selectedDays: [...this.state.selectedDays, ...addition]\n          });\n        }\n      } else {\n        const newSelectedDays = this.state.selectedDays.slice();\n        const index = newSelectedDays.indexOf(day);\n\n        if (index > -1) {\n          newSelectedDays.splice(index, 1);\n        } else {\n          newSelectedDays.push(day);\n        }\n\n        this.setState({\n          selectedDays: newSelectedDays\n        });\n      }\n    };\n  }\n\n  render() {\n    const weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    const blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i * 80,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, \"\"));\n    }\n\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let dayClass = 'day';\n\n      if (this.state.selectedDays.includes(d)) {\n        dayClass += ' selected-day';\n      } else {\n        dayClass += ' non-selected-day';\n        const dayOfWeek = (blanks.length + d) % 7;\n        dayClass += dayOfWeek < 2 ? ' non-selected-weekend' : ' non-selected-weekday';\n      }\n\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        className: dayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: e => {\n          this.onDayClick(e, d);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, d), /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"T\")));\n    }\n\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells.slice());\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells.slice());\n      }\n    });\n    const trElements = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(this.MonthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(this.YearNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.moveMonth(-1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.moveMonth(1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 29\n      }\n    }, \"next\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, weekdays), trElements)));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Calendar.js"],"names":["React","moment","Calendar","Component","state","dateContext","today","showMonthPopup","showYearPopup","selectedDays","lastChosenWithShift","weekdaysShort","months","year","format","month","daysInMonth","currentDay","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","moveMonth","side","add","SelectList","props","popup","monthList","map","monthName","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","e","userInput","target","value","test","onKeyUpYear","which","YearNav","onDayClick","day","shiftKey","addition","includes","push","i","newSelectedDays","slice","index","splice","render","weekdays","blanks","d","dayClass","dayOfWeek","length","totalSlots","rows","cells","forEach","row","trElements"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport '../resource/styles/Calendar.css'\r\n\r\nclass Calendar extends React.Component {\r\n    state = {\r\n        dateContext: moment(),\r\n        today: moment(),\r\n        showMonthPopup: false,\r\n        showYearPopup: false,\r\n        selectedDays: [],\r\n        lastChosenWithShift: null\r\n    };\r\n\r\n    weekdaysShort = moment.weekdaysShort();\r\n    months = moment.months();\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => this.state.dateContext.format(\"MMMM\");\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    currentDay = () => this.state.dateContext.format(\"D\");\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    moveMonth = (side) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(side, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    SelectList = (props) => {\r\n        const popup = props.monthList.map((monthName) => {\r\n            return (\r\n                <div key={monthName}>\r\n                    <p onClick={() => {this.setMonth(monthName)}}>\r\n                        {monthName}\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {popup}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onChangeMonth = () => {\r\n        this.setState({\r\n            showMonthPopup: !this.state.showMonthPopup\r\n        });\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span id='month-nav' onClick={()=> {this.onChangeMonth()}}>\r\n                {this.month()}\r\n                {this.state.showMonthPopup\r\n                    ? <this.SelectList monthList={this.months} />\r\n                    : null\r\n                }\r\n            </span>\r\n        );\r\n    };\r\n\r\n    showYearEditor = () => {\r\n        this.setState({\r\n            showYearNav: !this.state.showYearNav\r\n        });\r\n    };\r\n\r\n    setYear = (e) => {\r\n        const userInput = e.target.value;\r\n        if (/\\d+/.test(userInput)) {\r\n            let dateContext = Object.assign({}, this.state.dateContext);\r\n            dateContext = moment(dateContext).set(\"year\", e.target.value);\r\n            this.setState({\r\n                dateContext: dateContext\r\n            });\r\n        }\r\n    };\r\n\r\n    onKeyUpYear = (e) => {\r\n        if (e.which === 13 || e.which === 27) {\r\n            this.setYear(e);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav\r\n                ?\r\n                <React.Fragment>\r\n                    <input\r\n                        defaultValue = {this.year()}\r\n                        onKeyUp={(e) => this.onKeyUpYear(e)}\r\n                        type=\"number\"\r\n                    />\r\n                    <button\r\n                        className='transparent-element'\r\n                        onClick={() => {this.showYearEditor()}}\r\n                    >\r\n                        OK\r\n                    </button>\r\n                </React.Fragment>\r\n                :\r\n                <span\r\n                    onClick={() => {this.showYearEditor()}}\r\n                    id='year-nav'\r\n                >\r\n                {this.year()}\r\n                </span>\r\n        );\r\n    };\r\n\r\n    onDayClick = (e, day) => {\r\n        if (e.shiftKey) {\r\n            const addition = [];\r\n            if (this.state.lastChosenWithShift === null) {\r\n                if (!this.state.selectedDays.includes(day)) {\r\n                    addition.push(day);\r\n                }\r\n                this.setState({\r\n                    lastChosenWithShift: day,\r\n                    selectedDays: [...this.state.selectedDays, ...addition]\r\n                });\r\n            } else {\r\n                for (let i = this.state.lastChosenWithShift + 1; i <= day; i++) {\r\n                    if (!this.state.selectedDays.includes(i)) {\r\n                        addition.push(i);\r\n                    }\r\n                }\r\n                this.setState({\r\n                    lastChosenWithShift: null,\r\n                    selectedDays: [...this.state.selectedDays, ...addition]\r\n                })\r\n            }\r\n        } else {\r\n            const newSelectedDays = this.state.selectedDays.slice();\r\n            const index = newSelectedDays.indexOf(day);\r\n            if (index > -1) {\r\n                newSelectedDays.splice(index, 1);\r\n            } else {\r\n                newSelectedDays.push(day)\r\n            }\r\n            this.setState({\r\n                selectedDays: newSelectedDays\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day}>{day}</td>\r\n            )\r\n        });\r\n\r\n        const blanks = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(<td key={i * 80}>{\"\"}</td>);\r\n        }\r\n\r\n        const daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let dayClass = 'day';\r\n            if (this.state.selectedDays.includes(d)) {\r\n                dayClass += ' selected-day';\r\n            } else {\r\n                dayClass += ' non-selected-day';\r\n                const dayOfWeek = (blanks.length + d) % 7;\r\n                dayClass += dayOfWeek < 2 ? ' non-selected-weekend' : ' non-selected-weekday'\r\n            }\r\n            daysInMonth.push(\r\n                <td key={d} className={dayClass}>\r\n                    <span onClick={(e)=>{this.onDayClick(e, d)}}>\r\n                        {d}\r\n                    </span>\r\n                    <button>\r\n                        T\r\n                    </button>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        const totalSlots = [...blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells.slice());\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                rows.push(cells.slice());\r\n            }\r\n        });\r\n\r\n        const trElements = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i*100}>\r\n                    {d}\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div id='calendar-container'>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td colSpan=\"5\">\r\n                            <this.MonthNav />\r\n                            {\" \"}\r\n                            <this.YearNav />\r\n                        </td>\r\n                        <td colSpan=\"2\">\r\n                            <button onClick={()=> {this.moveMonth(-1)}}>prev</button>\r\n                            <button onClick={()=> {this.moveMonth(1)}}>next</button>\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        {weekdays}\r\n                    </tr>\r\n                    {trElements}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}