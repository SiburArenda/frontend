{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Dropdown.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SelectList from \"./SelectList\";\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSelect: false,\n      chosen: this.props.options[0]\n    };\n    this.selectPos = {\n      left: this.props.left + 'px'\n    };\n\n    this.choose = option => {\n      this.setState({\n        chosen: option,\n        showSelect: false\n      });\n      this.props.onChoose(option);\n    };\n\n    this.selectListRef = React.createRef();\n  }\n\n  handleClickOutside(e) {\n    const selectList = this.selectListRef.current;\n\n    if (selectList != null && !selectList.contains(e.target)) {\n      this.setState({\n        showSelect: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dropdown hover-text\",\n      onClick: () => {\n        if (!this.props.withButton) this.openSelect();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, this.props.header === '' ? this.state.chosen.rusName : this.props.header, this.props.withButton ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"open-select-btn\",\n      onClick: () => this.openSelect(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"jopa\") : null, this.state.showSelect ? /*#__PURE__*/React.createElement(SelectList, {\n      options: this.props.options,\n      onChoose: this.choose,\n      clickOutside: this.handleClickOutside,\n      ref: this.selectListRef,\n      style: this.selectPos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }) : null);\n  }\n\n  openSelect() {\n    this.setState({\n      showSelect: !this.state.showSelect\n    });\n  }\n\n}\n\nDropdown.propTypes = {\n  header: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired,\n  onChoose: PropTypes.func.isRequired,\n  withButton: PropTypes.bool.isRequired,\n  left: PropTypes.number.isRequired\n};\nexport default Dropdown;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Dropdown.js"],"names":["React","Component","PropTypes","SelectList","Dropdown","constructor","props","state","showSelect","chosen","options","selectPos","left","choose","option","setState","onChoose","selectListRef","createRef","handleClickOutside","e","selectList","current","contains","target","render","withButton","openSelect","header","rusName","propTypes","string","isRequired","array","func","bool","number"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SelectList from \"./SelectList\";\r\n\r\nclass Dropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.selectListRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        showSelect: false,\r\n        chosen: this.props.options[0]\r\n    };\r\n\r\n    handleClickOutside(e) {\r\n        const selectList = this.selectListRef.current;\r\n\r\n        if (selectList != null && !selectList.contains(e.target)) {\r\n            this.setState({\r\n                showSelect : false\r\n            });\r\n        }\r\n    }\r\n\r\n    selectPos = {\r\n        left: this.props.left + 'px'\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span\r\n                className='dropdown hover-text'\r\n                onClick={() => {if (!this.props.withButton) this.openSelect()}}\r\n            >\r\n                {this.props.header === '' ? this.state.chosen.rusName : this.props.header}\r\n                {this.props.withButton\r\n                    ?\r\n                    <button\r\n                        className='open-select-btn'\r\n                        onClick={() => this.openSelect()}\r\n                    >\r\n                        jopa\r\n                    </button>\r\n                    : null}\r\n                {this.state.showSelect\r\n                    ?\r\n                    <SelectList\r\n                        options={this.props.options}\r\n                        onChoose={this.choose}\r\n                        clickOutside={this.handleClickOutside}\r\n                        ref={this.selectListRef}\r\n                        style={this.selectPos}\r\n                    />\r\n                    : null\r\n                }\r\n            </span>\r\n        );\r\n    }\r\n\r\n    openSelect() {\r\n        this.setState({\r\n            showSelect: !this.state.showSelect\r\n        })\r\n    }\r\n\r\n    choose = (option) => {\r\n        this.setState({\r\n            chosen: option,\r\n            showSelect: false\r\n        });\r\n        this.props.onChoose(option);\r\n    }\r\n}\r\n\r\nDropdown.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    onChoose: PropTypes.func.isRequired,\r\n    withButton: PropTypes.bool.isRequired,\r\n    left: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Dropdown;"]},"metadata":{},"sourceType":"module"}