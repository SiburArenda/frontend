{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment'; //import './resource/styles/Calendar.css';\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedDay: null\n    };\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => this.state.dateContext.format(\"MMMM\");\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.moveMonth = side => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(side, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.SelectList = props => {\n      let popup = props.monthsList.map(monthName => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: monthName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          onClick: this.setMonth(monthName),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, monthName));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, popup);\n    };\n\n    this.onChangeMonth = () => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.MonthNav = () => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.onChangeMonth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, this.month(), this.state.showMonthPopup ? /*#__PURE__*/React.createElement(this.SelectList, {\n        monthsList: this.months,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 23\n        }\n      }) : null);\n    };\n\n    this.showYearEditor = () => {\n      this.setState({\n        showYearNav: true\n      });\n    };\n\n    this.setYear = year => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.onYearChange = e => this.setYear(e.target.value);\n\n    this.onKeyUpYear = e => {\n      if (e.which === 13 || e.which === 27) {\n        this.setYear(e.target.value);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n\n    this.YearNav = () => {\n      return this.state.showYearNav ? /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: this.year() // ref={(yearInput) => { this.yearInput = yearInput}}\n        ,\n        onKeyUp: this.onKeyUpYear,\n        onChange: this.onYearChange,\n        type: \"number\",\n        placeholder: \"year\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.showYearEditor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, this.year());\n    };\n\n    this.onDayClick = day => {\n      this.setState({ ...this.state,\n        selectedDay: day\n      });\n      console.log('Chose day ' + day.toString());\n    };\n  }\n\n  render() {\n    // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n    const weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: day,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    const blanks = new Array(this.firstDayOfMonth()).fill( /*#__PURE__*/React.createElement(\"td\", {\n      className: \"emptySlot\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 63\n      }\n    }, \"\")); // for (let i = 0; i < this.firstDayOfMonth(); i++) {\n    //     blanks.push(<td key={i * 80} className=\"emptySlot\">\n    //             {\"\"}\n    //         </td>\n    //     );\n    // }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      // let className = (d == this.currentDay() ? \"day current-day\": \"day\");\n      // let selectedClass = (d == this.state.selectedDay ? \" selected-day \" : \"\")\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        key: d * 123,\n        onClick: this.onDayClick(d),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, d)));\n    }\n\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        const insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    const trElements = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(this.MonthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(this.YearNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      onClick: this.moveMonth(-1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      onClick: this.moveMonth(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, weekdays), trElements)));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Calendar.js"],"names":["React","moment","Calendar","Component","state","dateContext","today","showMonthPopup","showYearPopup","selectedDay","weekdaysShort","months","year","format","month","daysInMonth","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","moveMonth","side","add","SelectList","props","popup","monthsList","map","monthName","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","e","target","value","onKeyUpYear","which","YearNav","onDayClick","day","console","log","toString","render","weekdays","blanks","Array","fill","d","push","totalSlots","rows","cells","forEach","row","i","insertRow","slice","length","trElements"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n//import './resource/styles/Calendar.css';\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    state = {\r\n        dateContext: moment(),\r\n        today: moment(),\r\n        showMonthPopup: false,\r\n        showYearPopup: false,\r\n        selectedDay: null\r\n    };\r\n\r\n    weekdaysShort = moment.weekdaysShort();\r\n    months = moment.months();\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => this.state.dateContext.format(\"MMMM\");\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    // currentDate = () => this.state.dateContext.get(\"date\");\r\n    //\r\n    // currentDay = () => this.state.dateContext.format(\"D\");\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    moveMonth = (side) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(side, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    SelectList = (props) => {\r\n        let popup = props.monthsList.map((monthName) => {\r\n            return (\r\n                <div key={monthName}>\r\n                    <p onClick={this.setMonth(monthName)}>\r\n                        {monthName}\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {popup}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onChangeMonth = () => {\r\n        this.setState({\r\n            showMonthPopup: !this.state.showMonthPopup\r\n        });\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span\r\n                onClick={this.onChangeMonth}>\r\n                {this.month()}\r\n                {this.state.showMonthPopup\r\n                    ? <this.SelectList monthsList={this.months} />\r\n                    : null\r\n                }\r\n            </span>\r\n        );\r\n    };\r\n\r\n    showYearEditor = () => {\r\n        this.setState({\r\n            showYearNav: true\r\n        });\r\n    };\r\n\r\n    setYear = (year) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"year\", year);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        })\r\n    };\r\n\r\n    onYearChange = (e) => this.setYear(e.target.value);\r\n\r\n    onKeyUpYear = (e) => {\r\n        if (e.which === 13 || e.which === 27) {\r\n            this.setYear(e.target.value);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav ?\r\n                <input\r\n                    defaultValue = {this.year()}\r\n                    // ref={(yearInput) => { this.yearInput = yearInput}}\r\n                    onKeyUp= {this.onKeyUpYear}\r\n                    onChange = {this.onYearChange}\r\n                    type=\"number\"\r\n                    placeholder=\"year\"/>\r\n                :\r\n                <span\r\n                    onClick={this.showYearEditor}>\r\n                {this.year()}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    onDayClick = (day) => {\r\n        this.setState({\r\n            ...this.state,\r\n            selectedDay: day\r\n        });\r\n        console.log('Chose day ' + day.toString())\r\n    };\r\n\r\n    render() {\r\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\r\n        const weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day}>{day}</td>\r\n            )\r\n        });\r\n\r\n        const blanks = new Array(this.firstDayOfMonth()).fill(<td className=\"emptySlot\">{\"\"}</td>);\r\n        // for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n        //     blanks.push(<td key={i * 80} className=\"emptySlot\">\r\n        //             {\"\"}\r\n        //         </td>\r\n        //     );\r\n        // }\r\n\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            // let className = (d == this.currentDay() ? \"day current-day\": \"day\");\r\n            // let selectedClass = (d == this.state.selectedDay ? \" selected-day \" : \"\")\r\n            daysInMonth.push(\r\n                <td /*className={className + selectedClass}*/ >\r\n                    <span key={d * 123} onClick={this.onDayClick(d)}>{d}</span>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        const totalSlots = [...blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                const insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                let insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n            }\r\n        });\r\n\r\n        const trElements = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i*100}>\r\n                    {d}\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td colSpan=\"5\">\r\n                            <this.MonthNav />\r\n                            {\" \"}\r\n                            <this.YearNav />\r\n                        </td>\r\n                        <td colSpan=\"2\">\r\n                            <i onClick={this.moveMonth(-1)}>\r\n                            </i>\r\n                            <i onClick={this.moveMonth(1)}>\r\n                            </i>\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        {weekdays}\r\n                    </tr>\r\n                    {trElements}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}