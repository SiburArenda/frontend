{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\client\\\\ClientNavList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, BrowserRouter as Router } from \"react-router-dom\";\nimport Hint from \"./Hint\";\n\nclass ClientNavList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hintX: 0,\n      hintY: 0,\n      showAppFormHint: false\n    };\n\n    this.showHint = e => {\n      this.setState({\n        hintX: +e.clientX,\n        hintY: +e.clientY,\n        showAppFormHint: true\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"hover-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, \"\\u041E \\u0441\\u0435\\u0440\\u0432\\u0438\\u0441\\u0435\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/rooms\",\n      className: \"hover-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, \"\\u041F\\u043E\\u043C\\u0435\\u0449\\u0435\\u043D\\u0438\\u044F\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/contacts\",\n      className: \"hover-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      className: \"hover-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.openApplicationForm(),\n      className: \"hover-text\",\n      onMouseEnter: e => this.showHint(e),\n      onMouseLeave: () => this.setState({\n        showAppFormHint: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u044F\\u0432\\u043A\\u0443\"), this.state.showAppFormHint ? /*#__PURE__*/React.createElement(Hint, {\n      hintText: 'Окно заполнения заявки откроется параллельно с остальным содержимым сервиса' + ' - Вы сможете переходить по разделам, не закрывая его и не заполняя заново!',\n      x: this.state.hintX,\n      y: this.state.hintY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }\n    }) : null));\n  }\n\n}\n\nClientNavList.propTypes = {\n  openApplicationForm: PropTypes.func.isRequired\n};\nexport default ClientNavList;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/client/ClientNavList.js"],"names":["React","Component","PropTypes","Link","BrowserRouter","Router","Hint","ClientNavList","state","hintX","hintY","showAppFormHint","showHint","e","setState","clientX","clientY","render","props","openApplicationForm","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,aAAa,IAAIC,MAA/B,QAA4C,kBAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCO,KAFkC,GAE1B;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,eAAe,EAAE;AAHb,KAF0B;;AAAA,SA6ClCC,QA7CkC,GA6CtBC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAE,CAACI,CAAC,CAACE,OADA;AAEVL,QAAAA,KAAK,EAAE,CAACG,CAAC,CAACG,OAFA;AAGVL,QAAAA,eAAe,EAAE;AAHP,OAAd;AAKH,KAnDiC;AAAA;;AAQlCM,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADJ,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADJ,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,SAAS,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADJ,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAmB,MAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EADJ,CAVJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,mBAAX,EADnB;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,YAAY,EAAEN,CAAC,IAAI,KAAKD,QAAL,CAAcC,CAAd,CAHvB;AAII,MAAA,YAAY,EAAE,MAAM,KAAKC,QAAL,CAAc;AAACH,QAAAA,eAAe,EAAE;AAAlB,OAAd,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FADJ,EASK,KAAKH,KAAL,CAAWG,eAAX,gBACK,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,gFACd,6EAFE;AAGE,MAAA,CAAC,EAAE,KAAKH,KAAL,CAAWC,KAHhB;AAIE,MAAA,CAAC,EAAE,KAAKD,KAAL,CAAWE,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,GAMK,IAfV,CAbJ,CADJ;AAiCH;;AA1CiC;;AAsDtCH,aAAa,CAACa,SAAd,GAA0B;AACtBD,EAAAA,mBAAmB,EAAEjB,SAAS,CAACmB,IAAV,CAAeC;AADd,CAA1B;AAIA,eAAef,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link, BrowserRouter as Router} from \"react-router-dom\";\r\nimport Hint from \"./Hint\";\r\n\r\nclass ClientNavList extends Component {\r\n\r\n    state = {\r\n        hintX: 0,\r\n        hintY: 0,\r\n        showAppFormHint: false\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <li>\r\n                    <Link to='/' className='hover-text'>О сервисе</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/rooms' className='hover-text'>Помещения</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/contacts' className='hover-text'>Контакты</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to='/signup' className='hover-text'>Регистрация</Link>\r\n                </li>\r\n                <li>\r\n                    <button\r\n                        onClick={() => this.props.openApplicationForm()}\r\n                        className='hover-text'\r\n                        onMouseEnter={e => this.showHint(e)}\r\n                        onMouseLeave={() => this.setState({showAppFormHint: false})}\r\n                    >\r\n                        Оформить заявку\r\n                    </button>\r\n                    {this.state.showAppFormHint\r\n                        ? <Hint\r\n                            hintText={'Окно заполнения заявки откроется параллельно с остальным содержимым сервиса' +\r\n                        ' - Вы сможете переходить по разделам, не закрывая его и не заполняя заново!'}\r\n                            x={this.state.hintX}\r\n                            y={this.state.hintY}/>\r\n                        : null}\r\n                </li>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n\r\n    showHint = (e) => {\r\n        this.setState({\r\n            hintX: +e.clientX,\r\n            hintY: +e.clientY,\r\n            showAppFormHint: true\r\n        })\r\n    }\r\n}\r\n\r\nClientNavList.propTypes = {\r\n    openApplicationForm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ClientNavList;"]},"metadata":{},"sourceType":"module"}