{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport '../resource/styles/Calendar.css';\nimport TimeSelectDialogue from \"./TimeSelectDialogue\";\nimport Timing from \"../functional/Timing\";\nimport '../resource/styles/Main.css';\nimport PropTypes from 'prop-types';\nimport Dropdown from \"./Dropdown\";\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.props.savedState.nothing === 'nothing' ? {\n      dateContext: moment(),\n      today: moment(),\n      showYearNav: false,\n      selectedDays: [],\n      selectedTimings: [],\n      lastChosenWithShift: null,\n      timeSelectDialogue: null,\n      currentlyManagedDayIndex: -1,\n      nothing: 'something',\n      warning: ''\n    } : this.props.savedState;\n    this.weekdaysShort = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\n    this.months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => {\n      const monthEng = this.state.dateContext.format(\"MMMM\"); // eslint-disable-next-line default-case\n\n      switch (monthEng) {\n        case 'January':\n          {\n            return 'Январь';\n          }\n\n        case 'February':\n          {\n            return 'Февраль';\n          }\n\n        case 'March':\n          {\n            return 'Март';\n          }\n\n        case 'April':\n          {\n            return 'Апрель';\n          }\n\n        case 'May':\n          {\n            return 'Май';\n          }\n\n        case 'June':\n          {\n            return 'Июнь';\n          }\n\n        case 'July':\n          {\n            return 'Июль';\n          }\n\n        case 'August':\n          {\n            return 'Август';\n          }\n\n        case 'September':\n          {\n            return 'Сентябрь';\n          }\n\n        case 'October':\n          {\n            return 'Октябрь';\n          }\n\n        case 'November':\n          {\n            return 'Ноябрь';\n          }\n\n        case 'December':\n          {\n            return 'Декабрь';\n          }\n      }\n    };\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.setMonth = monthOpt => {\n      const month = monthOpt.rusName;\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.moveMonth = side => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(side, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.showYearEditor = () => {\n      if (this.state.showYearNav) {\n        document.removeEventListener('click', this.handleClickOutside, false);\n      } else {\n        document.addEventListener('click', this.handleClickOutside, false);\n      }\n\n      this.setState({\n        showYearNav: !this.state.showYearNav\n      });\n    };\n\n    this.setYear = userInput => {\n      if (/\\d+/.test(userInput)) {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", +userInput);\n        this.setState({\n          dateContext: dateContext\n        });\n      }\n    };\n\n    this.onKeyUpYear = e => {\n      if (/^\\d+$/.test(e.target.value) && (e.which === 13 || e.which === 27)) {\n        this.setYear(e.target.value);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n\n    this.YearNav = () => {\n      return this.state.showYearNav ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"flex-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: this.year(),\n        onKeyUp: e => this.onKeyUpYear(e),\n        onChange: e => this.invalidInput(e, 'year'),\n        type: \"text\",\n        className: \"small-text-input\",\n        id: \"year-inp-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-element no-border-element hover-text\",\n        style: {\n          marginLeft: '7px'\n        },\n        onClick: () => this.okYear(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, \"OK\"), this.state.warning === 'year' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"warning\",\n        onMouseEnter: e => this.props.showHint(e, 'intPosNum'),\n        onMouseLeave: () => this.props.closeHint(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }\n      }) : null) : /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => {\n          this.showYearEditor();\n        },\n        className: \"hover-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, this.year());\n    };\n\n    this.exactDayDescription = day => {\n      const monthIndex = moment.months().indexOf(this.state.dateContext.format(\"MMMM\"));\n      const monthShort = moment.monthsShort()[monthIndex];\n      const weekdayShort = moment.weekdaysShort()[(+this.firstDayOfMonth() + day - 1) % 7];\n      return `${weekdayShort} ${monthShort} ${day} ${this.year()}`;\n    };\n\n    this.onDayClick = (e, day) => {\n      if (e.target.className.indexOf('time-set-button') === -1) {\n        const clickedDayDescription = this.exactDayDescription(day);\n\n        if (e.shiftKey) {\n          const additionDays = [];\n          const additionTimings = [];\n\n          if (this.state.lastChosenWithShift === null) {\n            if (!this.state.selectedDays.includes(clickedDayDescription)) {\n              additionDays.push(clickedDayDescription);\n              additionTimings.push(new Timing());\n            }\n\n            this.setState({\n              lastChosenWithShift: day,\n              selectedDays: [...this.state.selectedDays, ...additionDays],\n              selectedTimings: [...this.state.selectedTimings, ...additionTimings]\n            });\n          } else {\n            if (this.state.lastChosenWithShift < day) {\n              for (let i = this.state.lastChosenWithShift + 1; i <= day; i++) {\n                const iDesc = this.exactDayDescription(i);\n\n                if (!this.state.selectedDays.includes(iDesc)) {\n                  additionDays.push(iDesc);\n                  additionTimings.push(new Timing());\n                }\n              }\n            } else {\n              for (let i = day; i <= this.state.lastChosenWithShift - 1; i++) {\n                const iDesc = this.exactDayDescription(i);\n\n                if (!this.state.selectedDays.includes(iDesc)) {\n                  additionDays.push(iDesc);\n                  additionTimings.push(new Timing());\n                }\n              }\n            }\n\n            this.setState({\n              lastChosenWithShift: null,\n              selectedDays: [...this.state.selectedDays, ...additionDays],\n              selectedTimings: [...this.state.selectedTimings, ...additionTimings]\n            });\n          }\n        } else {\n          const newSelectedDays = this.state.selectedDays.slice();\n          const newSelectedTimings = this.state.selectedTimings.slice();\n          const index = newSelectedDays.indexOf(clickedDayDescription);\n\n          if (index > -1) {\n            newSelectedDays.splice(index, 1);\n            newSelectedTimings.splice(index, 1);\n          } else {\n            newSelectedDays.push(clickedDayDescription);\n            newSelectedTimings.push(new Timing());\n          }\n\n          const timeSelect = index === +this.state.currentlyManagedDayIndex ? null : this.state.timeSelectDialogue;\n          let newDayIndex = this.state.currentlyManagedDayIndex;\n          newDayIndex -= index < newDayIndex ? 1 : 0;\n          this.setState({\n            selectedDays: newSelectedDays,\n            selectedTimings: newSelectedTimings,\n            timeSelectDialogue: timeSelect,\n            currentlyManagedDayIndex: newDayIndex\n          });\n        }\n      }\n    };\n\n    this.changeTiming = (attr, timing) => {\n      const newTimings = this.state.selectedTimings.slice();\n      newTimings[this.state.currentlyManagedDayIndex].setTiming(attr, timing);\n      this.setState({\n        selectedTimings: newTimings\n      });\n    };\n\n    this.timeSetButton = (e, day) => {\n      const dayDesc = this.exactDayDescription(day);\n\n      if (!this.state.selectedDays.includes(dayDesc)) {\n        this.setState({\n          selectedDays: [...this.state.selectedDays, dayDesc],\n          selectedTimings: [...this.state.selectedTimings, new Timing()]\n        });\n      }\n\n      if (!e.shiftKey) {\n        const prob = this.state.selectedDays.indexOf(dayDesc);\n        const index = prob === -1 ? this.state.selectedDays.length : prob;\n        const newTimingObj = prob === -1 ? new Timing() : this.state.selectedTimings[index];\n        const timeSelect = /*#__PURE__*/React.createElement(TimeSelectDialogue, {\n          dayToShow: newTimingObj,\n          changeTiming: this.changeTiming,\n          setForAll: this.setForAll,\n          closeTimeSelectDialogue: () => this.closeTimeSettings(),\n          startHRef: el => {\n            if (el != null) el.value = el.defaultValue;\n          },\n          startMRef: el => {\n            if (el != null) el.value = el.defaultValue;\n          },\n          endHRef: el => {\n            if (el != null) el.value = el.defaultValue;\n          },\n          endMRef: el => {\n            if (el != null) el.value = el.defaultValue;\n          },\n          checkBoxRef: el => {\n            if (el != null) el.checked = false;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }\n        });\n        this.setState({\n          currentlyManagedDayIndex: index,\n          timeSelectDialogue: timeSelect\n        });\n      }\n    };\n\n    this.getTimeSetButtonClass = day => {\n      return this.state.selectedDays.includes(this.exactDayDescription(day)) ? 'time-set-button time-set-button-orange' : 'time-set-button time-set-button-white';\n    };\n\n    this.closeTimeSettings = () => {\n      this.setState({\n        timeSelectDialogue: null\n      });\n    };\n\n    this.setForAll = e => {\n      const newTimings = this.state.selectedTimings.slice();\n      const ind = this.state.currentlyManagedDayIndex;\n\n      if (e.target.checked) {\n        const globalTiming = this.state.selectedTimings[this.state.currentlyManagedDayIndex];\n\n        for (let i = 0; i < newTimings.length; i++) {\n          if (i !== ind) {\n            newTimings[i].storeLastValue();\n            newTimings[i].setTimingFull(globalTiming);\n          }\n        }\n      } else {\n        for (let i = 0; i < newTimings.length; i++) {\n          if (i !== ind) {\n            newTimings[i].backup();\n          }\n        }\n      }\n\n      this.setState({\n        selectedTimings: newTimings\n      });\n    };\n\n    this.clearSelectedDates = () => {\n      this.setState({\n        selectedDays: [],\n        selectedTimings: [],\n        timeSelectDialogue: null,\n        currentlyManagedDayIndex: -1,\n        lastChosenWithShift: null\n      });\n    };\n\n    this.invalidInput = (e, where) => {\n      if (!e.target.value.match(/^\\d*$/) || +e.target.value === 0) {\n        this.setState({\n          warning: where\n        });\n      } else {\n        this.props.closeHint();\n        this.setState({\n          warning: ''\n        });\n      }\n    };\n\n    this.okYear = () => {\n      const y = document.getElementById('year-inp-line');\n\n      if (/^\\d+$/.test(y.value)) {\n        this.setYear(y.value);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n\n    this.handleClickOutside = e => {\n      const y = document.getElementById('year-inp-line');\n      const ok = /^\\d+$/.test(y.value);\n\n      if (ok && e.target.id !== 'year-inp-line') {\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: day,\n        className: \"weekday drag-detector\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    const blanks = [];\n    const realBlanksLen = +this.firstDayOfMonth() === 0 ? 7 : +this.firstDayOfMonth();\n\n    for (let i = 1; i < realBlanksLen; i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i * 80,\n        className: \"drag-detector\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }\n      }, \"\"));\n    }\n\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let dayClass = 'day';\n\n      if (this.state.selectedDays.includes(this.exactDayDescription(d))) {\n        dayClass += ' selected-day';\n      } else {\n        dayClass += ' non-selected-day';\n        const dayOfWeek = (blanks.length + d) % 7;\n        dayClass += dayOfWeek === 0 || dayOfWeek === 6 ? ' non-selected-weekend' : ' non-selected-weekday';\n      }\n\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        onClick: e => {\n          this.onDayClick(e, d);\n        },\n        className: dayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }\n      }, d, /*#__PURE__*/React.createElement(\"button\", {\n        className: this.getTimeSetButtonClass(d),\n        onClick: e => {\n          this.timeSetButton(e, d);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      })));\n    }\n\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells.slice());\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells.slice());\n      }\n    });\n    const trElements = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }\n      }, d);\n    });\n    const monthOptions = this.months.map(monthRusName => {\n      return {\n        rusName: monthRusName,\n        additional: null\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"calendar-container\",\n      className: \"drag-detector block-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"calendar-table\",\n      className: \"transparent-element drag-detector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      id: \"calendar-head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      className: \"drag-detector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drag-detector flex-container\",\n      style: {\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      header: this.month(),\n      options: monthOptions,\n      onChoose: this.setMonth,\n      withButton: false,\n      left: -13,\n      showHint: this.props.showHint,\n      closeHint: this.props.closeHint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(this.YearNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"drag-detector\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"prev\",\n      className: \"time-move-btn\",\n      onClick: () => {\n        this.moveMonth(-1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 29\n      }\n    }, ''), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"next\",\n      className: \"time-move-btn\",\n      onClick: () => {\n        this.moveMonth(1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }, '')))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    }, weekdays), trElements)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"flex-container\",\n      style: {\n        flexDirection: 'row-reverse'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"hover-text\",\n      onClick: () => this.clearSelectedDates(),\n      onMouseEnter: e => this.props.showHint(e, 'clearCalendar'),\n      onMouseLeave: () => this.props.closeHint(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }\n    }, \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'left',\n        margin: '10px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, \"\\u0427\\u0442\\u043E\\u0431\\u044B \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0441\\u0440\\u0430\\u0437\\u0443 \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0434\\u0430\\u0442, \\u0438\\u0434\\u0443\\u0449\\u0438\\u0445 \\u043F\\u043E\\u0434\\u0440\\u044F\\u0434, \\u0437\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u043A\\u043B\\u0430\\u0432\\u0438\\u0448\\u0443 Shift \\u0438 \\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0432\\u044B\\u0439 \\u0438 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0434\\u0435\\u043D\\u044C \\u0438\\u043D\\u0442\\u0435\\u0440\\u0432\\u0430\\u043B\\u0430\"), this.state.timeSelectDialogue);\n  }\n\n}\n\nCalendar.propTypes = {\n  savedState: PropTypes.object.isRequired,\n  showHint: PropTypes.func.isRequired,\n  closeHint: PropTypes.func.isRequired\n};\nexport default Calendar;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Calendar.js"],"names":["React","moment","TimeSelectDialogue","Timing","PropTypes","Dropdown","Calendar","Component","state","props","savedState","nothing","dateContext","today","showYearNav","selectedDays","selectedTimings","lastChosenWithShift","timeSelectDialogue","currentlyManagedDayIndex","warning","weekdaysShort","months","year","format","month","monthEng","daysInMonth","firstDayOfMonth","startOf","setMonth","monthOpt","rusName","monthNo","indexOf","Object","assign","set","setState","moveMonth","side","add","showYearEditor","document","removeEventListener","handleClickOutside","addEventListener","setYear","userInput","test","onKeyUpYear","e","target","value","which","YearNav","invalidInput","marginLeft","okYear","showHint","closeHint","exactDayDescription","day","monthIndex","monthShort","monthsShort","weekdayShort","onDayClick","className","clickedDayDescription","shiftKey","additionDays","additionTimings","includes","push","i","iDesc","newSelectedDays","slice","newSelectedTimings","index","splice","timeSelect","newDayIndex","changeTiming","attr","timing","newTimings","setTiming","timeSetButton","dayDesc","prob","length","newTimingObj","setForAll","closeTimeSettings","el","defaultValue","checked","getTimeSetButtonClass","ind","globalTiming","storeLastValue","setTimingFull","backup","clearSelectedDates","where","match","y","getElementById","ok","id","render","weekdays","map","blanks","realBlanksLen","d","dayClass","dayOfWeek","totalSlots","rows","cells","forEach","row","trElements","monthOptions","monthRusName","additional","margin","flexDirection","textAlign","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport '../resource/styles/Calendar.css'\r\nimport TimeSelectDialogue from \"./TimeSelectDialogue\";\r\nimport Timing from \"../functional/Timing\";\r\nimport '../resource/styles/Main.css'\r\nimport PropTypes from 'prop-types';\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    state = this.props.savedState.nothing === 'nothing'\r\n        ?\r\n        {\r\n            dateContext: moment(),\r\n            today: moment(),\r\n            showYearNav: false,\r\n            selectedDays: [],\r\n            selectedTimings: [],\r\n            lastChosenWithShift: null,\r\n            timeSelectDialogue: null,\r\n            currentlyManagedDayIndex: -1,\r\n            nothing: 'something',\r\n            warning: ''\r\n        }\r\n        :\r\n        this.props.savedState;\r\n\r\n    weekdaysShort = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\r\n    months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => {\r\n        const monthEng = this.state.dateContext.format(\"MMMM\");\r\n        // eslint-disable-next-line default-case\r\n        switch (monthEng) {\r\n            case 'January': {\r\n                return 'Январь';\r\n            }\r\n            case 'February': {\r\n                return 'Февраль';\r\n            }\r\n            case 'March': {\r\n                return 'Март';\r\n            }\r\n            case 'April': {\r\n                return 'Апрель';\r\n            }\r\n            case 'May': {\r\n                return 'Май';\r\n            }\r\n            case 'June': {\r\n                return 'Июнь';\r\n            }\r\n            case 'July': {\r\n                return 'Июль';\r\n            }\r\n            case 'August': {\r\n                return 'Август';\r\n            }\r\n            case 'September': {\r\n                return 'Сентябрь';\r\n            }\r\n            case 'October': {\r\n                return 'Октябрь';\r\n            }\r\n            case 'November': {\r\n                return 'Ноябрь';\r\n            }\r\n            case 'December': {\r\n                return 'Декабрь';\r\n            }\r\n        }\r\n    };\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    setMonth = (monthOpt) => {\r\n        const month = monthOpt.rusName;\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    moveMonth = (side) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(side, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    showYearEditor = () => {\r\n\r\n        if (this.state.showYearNav) {\r\n            document.removeEventListener('click', this.handleClickOutside, false);\r\n        } else {\r\n            document.addEventListener('click', this.handleClickOutside, false);\r\n        }\r\n\r\n        this.setState({\r\n            showYearNav: !this.state.showYearNav\r\n        });\r\n    };\r\n\r\n    setYear = (userInput) => {\r\n        if (/\\d+/.test(userInput)) {\r\n            let dateContext = Object.assign({}, this.state.dateContext);\r\n            dateContext = moment(dateContext).set(\"year\", +userInput);\r\n            this.setState({\r\n                dateContext: dateContext\r\n            });\r\n        }\r\n    };\r\n\r\n    onKeyUpYear = (e) => {\r\n        if (/^\\d+$/.test(e.target.value) && (e.which === 13 || e.which === 27)) {\r\n            this.setYear(e.target.value);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav\r\n                ?\r\n                <span className='flex-container'>\r\n                    <input\r\n                        defaultValue={this.year()}\r\n                        onKeyUp={e => this.onKeyUpYear(e)}\r\n                        onChange={e => this.invalidInput(e, 'year')}\r\n                        type=\"text\"\r\n                        className='small-text-input'\r\n                        id='year-inp-line'\r\n                    />\r\n                    <button\r\n                        className='transparent-element no-border-element hover-text'\r\n                        style={{marginLeft: '7px'}}\r\n                        onClick={() => this.okYear()}\r\n                    >\r\n                        OK\r\n                    </button>\r\n                    {\r\n                        this.state.warning === 'year'\r\n                            ?\r\n                            <div\r\n                                className='warning'\r\n                                onMouseEnter={e => this.props.showHint(e, 'intPosNum')}\r\n                                onMouseLeave={() => this.props.closeHint()}\r\n                            >\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </span>\r\n                :\r\n                <span\r\n                    onClick={() => {\r\n                        this.showYearEditor()\r\n                    }}\r\n                    className='hover-text'\r\n                >\r\n                {this.year()}\r\n                </span>\r\n        );\r\n    };\r\n\r\n    exactDayDescription = (day) => {\r\n        const monthIndex = moment.months().indexOf(this.state.dateContext.format(\"MMMM\"));\r\n        const monthShort = moment.monthsShort()[monthIndex];\r\n        const weekdayShort = moment.weekdaysShort()[(+this.firstDayOfMonth() + day - 1) % 7];\r\n        return `${weekdayShort} ${monthShort} ${day} ${this.year()}`\r\n    };\r\n\r\n    onDayClick = (e, day) => {\r\n        if (e.target.className.indexOf('time-set-button') === -1) {\r\n            const clickedDayDescription = this.exactDayDescription(day);\r\n            if (e.shiftKey) {\r\n                const additionDays = [];\r\n                const additionTimings = [];\r\n                if (this.state.lastChosenWithShift === null) {\r\n                    if (!this.state.selectedDays.includes(clickedDayDescription)) {\r\n                        additionDays.push(clickedDayDescription);\r\n                        additionTimings.push(new Timing());\r\n                    }\r\n                    this.setState({\r\n                        lastChosenWithShift: day,\r\n                        selectedDays: [...this.state.selectedDays, ...additionDays],\r\n                        selectedTimings: [...this.state.selectedTimings, ...additionTimings]\r\n                    });\r\n                } else {\r\n                    if (this.state.lastChosenWithShift < day) {\r\n                        for (let i = this.state.lastChosenWithShift + 1; i <= day; i++) {\r\n                            const iDesc = this.exactDayDescription(i);\r\n                            if (!this.state.selectedDays.includes(iDesc)) {\r\n                                additionDays.push(iDesc);\r\n                                additionTimings.push(new Timing());\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = day; i <= this.state.lastChosenWithShift - 1; i++) {\r\n                            const iDesc = this.exactDayDescription(i);\r\n                            if (!this.state.selectedDays.includes(iDesc)) {\r\n                                additionDays.push(iDesc);\r\n                                additionTimings.push(new Timing());\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        lastChosenWithShift: null,\r\n                        selectedDays: [...this.state.selectedDays, ...additionDays],\r\n                        selectedTimings: [...this.state.selectedTimings, ...additionTimings]\r\n                    })\r\n                }\r\n            } else {\r\n                const newSelectedDays = this.state.selectedDays.slice();\r\n                const newSelectedTimings = this.state.selectedTimings.slice();\r\n                const index = newSelectedDays.indexOf(clickedDayDescription);\r\n                if (index > -1) {\r\n                    newSelectedDays.splice(index, 1);\r\n                    newSelectedTimings.splice(index, 1);\r\n                } else {\r\n                    newSelectedDays.push(clickedDayDescription);\r\n                    newSelectedTimings.push(new Timing());\r\n                }\r\n                const timeSelect =\r\n                    (index === +this.state.currentlyManagedDayIndex) ? null : this.state.timeSelectDialogue;\r\n                let newDayIndex = this.state.currentlyManagedDayIndex;\r\n                newDayIndex -= (index < newDayIndex) ? 1 : 0;\r\n                this.setState({\r\n                    selectedDays: newSelectedDays,\r\n                    selectedTimings: newSelectedTimings,\r\n                    timeSelectDialogue: timeSelect,\r\n                    currentlyManagedDayIndex: newDayIndex\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    changeTiming = (attr, timing) => {\r\n        const newTimings = this.state.selectedTimings.slice();\r\n        newTimings[this.state.currentlyManagedDayIndex].setTiming(attr, timing);\r\n        this.setState({\r\n            selectedTimings: newTimings\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day} className='weekday drag-detector'>{day}</td>\r\n            )\r\n        });\r\n\r\n        const blanks = [];\r\n        const realBlanksLen = +this.firstDayOfMonth() === 0 ? 7 : +this.firstDayOfMonth();\r\n        for (let i = 1; i < realBlanksLen; i++) {\r\n            blanks.push(<td key={i * 80} className='drag-detector'>{\"\"}</td>);\r\n        }\r\n\r\n        const daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let dayClass = 'day';\r\n            if (this.state.selectedDays.includes(this.exactDayDescription(d))) {\r\n                dayClass += ' selected-day';\r\n            } else {\r\n                dayClass += ' non-selected-day';\r\n                const dayOfWeek = (blanks.length + d) % 7;\r\n                dayClass += (dayOfWeek === 0 || dayOfWeek === 6) ? ' non-selected-weekend' : ' non-selected-weekday'\r\n            }\r\n            daysInMonth.push(\r\n                <td\r\n                    key={d} onClick={(e) => {\r\n                    this.onDayClick(e, d)\r\n                }}\r\n                    className={dayClass}\r\n                >\r\n                    {d}\r\n                    <button\r\n                        className={this.getTimeSetButtonClass(d)}\r\n                        onClick={(e) => {\r\n                            this.timeSetButton(e, d)\r\n                        }}>\r\n                    </button>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        const totalSlots = [...blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells.slice());\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                rows.push(cells.slice());\r\n            }\r\n        });\r\n\r\n        const trElements = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i * 100}>\r\n                    {d}\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        const monthOptions = this.months.map(\r\n            monthRusName => {\r\n                return {rusName: monthRusName, additional: null};\r\n            });\r\n\r\n        return (\r\n            <div id='calendar-container' className='drag-detector block-container'>\r\n\r\n                <table id='calendar-table' className='transparent-element drag-detector'>\r\n                    <thead id='calendar-head'>\r\n                    <tr>\r\n                        <td colSpan=\"5\" className='drag-detector'>\r\n                            <div className='drag-detector flex-container' style={{margin: 'auto'}}>\r\n                                <Dropdown\r\n                                    header={this.month()}\r\n                                    options={monthOptions}\r\n                                    onChoose={this.setMonth}\r\n                                    withButton={false}\r\n                                    left={-13}\r\n                                    showHint={this.props.showHint}\r\n                                    closeHint={this.props.closeHint}\r\n                                />\r\n                                <this.YearNav/>\r\n                            </div>\r\n                        </td>\r\n                        <td colSpan=\"2\" className='drag-detector'>\r\n                            <button\r\n                                id='prev'\r\n                                className='time-move-btn'\r\n                                onClick={() => {\r\n                                    this.moveMonth(-1)\r\n                                }}>{''}</button>\r\n                            <button\r\n                                id='next'\r\n                                className='time-move-btn'\r\n                                onClick={() => {\r\n                                    this.moveMonth(1)\r\n                                }}>{''}</button>\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        {weekdays}\r\n                    </tr>\r\n                    {trElements}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <p className='flex-container' style={{flexDirection: 'row-reverse'}}>\r\n                    <label\r\n                        className='hover-text'\r\n                        onClick={() => this.clearSelectedDates()}\r\n                        onMouseEnter={e => this.props.showHint(e, 'clearCalendar')}\r\n                        onMouseLeave={() => this.props.closeHint()}\r\n                    >\r\n                        Очистить\r\n                    </label>\r\n                </p>\r\n\r\n                <p style={{textAlign: 'left', margin: '10px 0'}}>\r\n                    Чтобы выбрать сразу несколько дат, идущих подряд, зажмите клавишу Shift и выберите первый и\r\n                    последний день интервала\r\n                </p>\r\n\r\n                {this.state.timeSelectDialogue}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    timeSetButton = (e, day) => {\r\n        const dayDesc = this.exactDayDescription(day);\r\n        if (!this.state.selectedDays.includes(dayDesc)) {\r\n            this.setState({\r\n                selectedDays: [...this.state.selectedDays, dayDesc],\r\n                selectedTimings: [...this.state.selectedTimings, new Timing()]\r\n            })\r\n        }\r\n        if (!e.shiftKey) {\r\n            const prob = this.state.selectedDays.indexOf(dayDesc);\r\n            const index = prob === -1 ? this.state.selectedDays.length : prob;\r\n            const newTimingObj = prob === -1 ? new Timing() : this.state.selectedTimings[index];\r\n            const timeSelect =\r\n                <\r\n                    TimeSelectDialogue\r\n                    dayToShow={newTimingObj}\r\n                    changeTiming={this.changeTiming}\r\n                    setForAll={this.setForAll}\r\n                    closeTimeSelectDialogue={() => this.closeTimeSettings()}\r\n                    startHRef={el => {\r\n                        if (el != null) el.value = el.defaultValue\r\n                    }}\r\n                    startMRef={el => {\r\n                        if (el != null) el.value = el.defaultValue\r\n                    }}\r\n                    endHRef={el => {\r\n                        if (el != null) el.value = el.defaultValue\r\n                    }}\r\n                    endMRef={el => {\r\n                        if (el != null) el.value = el.defaultValue\r\n                    }}\r\n                    checkBoxRef={el => {\r\n                        if (el != null) el.checked = false\r\n                    }}\r\n                />;\r\n            this.setState({\r\n                currentlyManagedDayIndex: index,\r\n                timeSelectDialogue: timeSelect\r\n            })\r\n        }\r\n    };\r\n\r\n    getTimeSetButtonClass = (day) => {\r\n        return this.state.selectedDays.includes(this.exactDayDescription(day))\r\n            ? 'time-set-button time-set-button-orange'\r\n            : 'time-set-button time-set-button-white'\r\n    };\r\n\r\n    closeTimeSettings = () => {\r\n        this.setState({\r\n            timeSelectDialogue: null\r\n        })\r\n    };\r\n\r\n    setForAll = (e) => {\r\n        const newTimings = this.state.selectedTimings.slice();\r\n        const ind = this.state.currentlyManagedDayIndex;\r\n        if (e.target.checked) {\r\n            const globalTiming = this.state.selectedTimings[this.state.currentlyManagedDayIndex];\r\n            for (let i = 0; i < newTimings.length; i++) {\r\n                if (i !== ind) {\r\n                    newTimings[i].storeLastValue();\r\n                    newTimings[i].setTimingFull(globalTiming);\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < newTimings.length; i++) {\r\n                if (i !== ind) {\r\n                    newTimings[i].backup();\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            selectedTimings: newTimings\r\n        })\r\n    };\r\n\r\n    clearSelectedDates = () => {\r\n        this.setState({\r\n            selectedDays: [],\r\n            selectedTimings: [],\r\n            timeSelectDialogue: null,\r\n            currentlyManagedDayIndex: -1,\r\n            lastChosenWithShift: null\r\n        })\r\n    };\r\n\r\n    invalidInput = (e, where) => {\r\n        if (!e.target.value.match(/^\\d*$/) || +e.target.value === 0) {\r\n            this.setState({\r\n                warning: where\r\n            })\r\n        } else {\r\n            this.props.closeHint();\r\n            this.setState({\r\n                warning: ''\r\n            })\r\n        }\r\n    };\r\n\r\n    okYear = () => {\r\n        const y = document.getElementById('year-inp-line');\r\n        if (/^\\d+$/.test(y.value)) {\r\n            this.setYear(y.value);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n\r\n    handleClickOutside = (e) => {\r\n        const y = document.getElementById('year-inp-line');\r\n        const ok = /^\\d+$/.test(y.value);\r\n        if (ok && e.target.id !== 'year-inp-line') {\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n}\r\n\r\nCalendar.propTypes = {\r\n    savedState: PropTypes.object.isRequired,\r\n    showHint: PropTypes.func.isRequired,\r\n    closeHint: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}