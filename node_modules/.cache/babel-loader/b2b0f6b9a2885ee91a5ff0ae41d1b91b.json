{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport '../resource/styles/Calendar.css';\nimport TimeSelectDialogue from \"./TimeSelectDialogue\";\n\nclass Timing {\n  constructor(startH, startM, endH, endM) {\n    this.startH = startH;\n    this.startM = startM;\n    this.endH = endH;\n    this.endM = endM;\n  }\n\n}\n\nclass Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedDays: [],\n      selectedTimings: [],\n      lastChosenWithShift: null,\n      timeSelectDialogue: -1\n    };\n    this.weekdaysShort = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\n    this.months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => {\n      const monthEng = this.state.dateContext.format(\"MMMM\"); // eslint-disable-next-line default-case\n\n      switch (monthEng) {\n        case 'January':\n          {\n            return 'Январь';\n          }\n\n        case 'February':\n          {\n            return 'Февраль';\n          }\n\n        case 'March':\n          {\n            return 'Март';\n          }\n\n        case 'April':\n          {\n            return 'Апрель';\n          }\n\n        case 'May':\n          {\n            return 'Май';\n          }\n\n        case 'June':\n          {\n            return 'Июнь';\n          }\n\n        case 'July':\n          {\n            return 'Июль';\n          }\n\n        case 'August':\n          {\n            return 'Август';\n          }\n\n        case 'September':\n          {\n            return 'Сентябрь';\n          }\n\n        case 'October':\n          {\n            return 'Октябрь';\n          }\n\n        case 'November':\n          {\n            return 'Ноябрь';\n          }\n\n        case 'December':\n          {\n            return 'Декабрь';\n          }\n      }\n    };\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.moveMonth = side => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(side, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.SelectList = props => {\n      const popup = props.monthList.map(monthName => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: monthName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          onClick: () => {\n            this.setMonth(monthName);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }\n        }, monthName));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"month-select-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, popup);\n    };\n\n    this.onChangeMonth = () => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.MonthNav = () => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        id: \"month-nav\",\n        onClick: () => {\n          this.onChangeMonth();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, this.month(), this.state.showMonthPopup ? /*#__PURE__*/React.createElement(this.SelectList, {\n        monthList: this.months,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 23\n        }\n      }) : null);\n    };\n\n    this.showYearEditor = () => {\n      this.setState({\n        showYearNav: !this.state.showYearNav\n      });\n    };\n\n    this.setYear = e => {\n      const userInput = e.target.value;\n\n      if (/\\d+/.test(userInput)) {\n        let dateContext = Object.assign({}, this.state.dateContext);\n        dateContext = moment(dateContext).set(\"year\", e.target.value);\n        this.setState({\n          dateContext: dateContext\n        });\n      }\n    };\n\n    this.onKeyUpYear = e => {\n      if (e.which === 13 || e.which === 27) {\n        this.setYear(e);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n\n    this.YearNav = () => {\n      return this.state.showYearNav ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: this.year(),\n        onKeyUp: e => this.onKeyUpYear(e),\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-element no-border-element\",\n        onClick: () => {\n          this.showYearEditor();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }\n      }, \"OK\")) : /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => {\n          this.showYearEditor();\n        },\n        id: \"year-nav\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }\n      }, this.year());\n    };\n\n    this.onDayClick = (e, day) => {\n      if (e.target.className.indexOf('time-set-button') === -1 || !this.state.selectedDays.includes(day)) {\n        if (e.shiftKey) {\n          const additionDays = [];\n          const additionTimings = [];\n\n          if (this.state.lastChosenWithShift === null) {\n            if (!this.state.selectedDays.includes(day)) {\n              additionDays.push(day);\n              additionTimings.push(new Timing(0, 0, 0, 0));\n            }\n\n            this.setState({\n              lastChosenWithShift: day,\n              selectedDays: [...this.state.selectedDays, ...additionDays],\n              selectedTimings: [...this.state.selectedTimings, ...additionTimings]\n            });\n          } else {\n            if (this.state.lastChosenWithShift < day) {\n              for (let i = this.state.lastChosenWithShift + 1; i <= day; i++) {\n                if (!this.state.selectedDays.includes(i)) {\n                  additionDays.push(i);\n                }\n              }\n            } else {\n              for (let i = day; i <= this.state.lastChosenWithShift - 1; i++) {\n                if (!this.state.selectedDays.includes(i)) {\n                  additionDays.push(i);\n                }\n              }\n            }\n\n            this.setState({\n              lastChosenWithShift: null,\n              selectedDays: [...this.state.selectedDays, ...additionDays]\n            });\n          }\n        } else {\n          const newSelectedDays = this.state.selectedDays.slice();\n          const index = newSelectedDays.indexOf(day);\n\n          if (index > -1) {\n            newSelectedDays.splice(index, 1);\n          } else {\n            newSelectedDays.push(day);\n          }\n\n          this.setState({\n            selectedDays: newSelectedDays\n          });\n        }\n      }\n    };\n\n    this.timeSetButton = (e, day) => {\n      if (!e.shiftKey) {\n        this.setState({\n          timeSelectDialogue: day\n        });\n      }\n    };\n\n    this.getTimeSetButtonClass = day => {\n      return this.state.selectedDays.includes(day) ? 'time-set-button time-set-button-orange' : 'time-set-button time-set-button-white';\n    };\n  }\n\n  render() {\n    const weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: day,\n        className: \"weekday\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    const blanks = [];\n    const realBlanksLen = +this.firstDayOfMonth() === 0 ? 7 : +this.firstDayOfMonth();\n\n    for (let i = 1; i < realBlanksLen; i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i * 80,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }\n      }, \"\"));\n    }\n\n    const daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let dayClass = 'day';\n\n      if (this.state.selectedDays.includes(d)) {\n        dayClass += ' selected-day';\n      } else {\n        dayClass += ' non-selected-day';\n        const dayOfWeek = (blanks.length + d) % 7;\n        dayClass += dayOfWeek === 0 || dayOfWeek === 6 ? ' non-selected-weekend' : ' non-selected-weekday';\n      }\n\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        onClick: e => {\n          this.onDayClick(e, d);\n        },\n        className: dayClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }\n      }, d, /*#__PURE__*/React.createElement(\"button\", {\n        className: this.getTimeSetButtonClass(d),\n        onClick: e => {\n          this.timeSetButton(e, d);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }\n      })));\n    }\n\n    const totalSlots = [...blanks, ...daysInMonth];\n    const rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells.slice());\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells.slice());\n      }\n    });\n    const trElements = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"calendar-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      id: \"calendar-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(this.MonthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(this.YearNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.moveMonth(-1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.moveMonth(1);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 29\n      }\n    }, \"next\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, weekdays), trElements)), /*#__PURE__*/React.createElement(TimeSelectDialogue, {\n      whereToShow: this.state.timeSelectDialogue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Calendar.js"],"names":["React","moment","TimeSelectDialogue","Timing","constructor","startH","startM","endH","endM","Calendar","Component","state","dateContext","today","showMonthPopup","showYearPopup","selectedDays","selectedTimings","lastChosenWithShift","timeSelectDialogue","weekdaysShort","months","year","format","month","monthEng","daysInMonth","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","moveMonth","side","add","SelectList","props","popup","monthList","map","monthName","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","e","userInput","target","value","test","onKeyUpYear","which","YearNav","onDayClick","day","className","includes","shiftKey","additionDays","additionTimings","push","i","newSelectedDays","slice","index","splice","timeSetButton","getTimeSetButtonClass","render","weekdays","blanks","realBlanksLen","d","dayClass","dayOfWeek","length","totalSlots","rows","cells","forEach","row","trElements"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\nimport '../resource/styles/Calendar.css'\r\nimport TimeSelectDialogue from \"./TimeSelectDialogue\";\r\n\r\nclass Timing {\r\n    constructor(startH, startM, endH, endM) {\r\n        this.startH = startH;\r\n        this.startM = startM;\r\n        this.endH = endH;\r\n        this.endM = endM;\r\n    }\r\n}\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    state = {\r\n        dateContext: moment(),\r\n        today: moment(),\r\n        showMonthPopup: false,\r\n        showYearPopup: false,\r\n        selectedDays: [],\r\n        selectedTimings: [],\r\n        lastChosenWithShift: null,\r\n        timeSelectDialogue: -1\r\n    };\r\n\r\n    weekdaysShort = ['ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ', 'ВС'];\r\n    months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => {\r\n        const monthEng = this.state.dateContext.format(\"MMMM\");\r\n        // eslint-disable-next-line default-case\r\n        switch (monthEng) {\r\n            case 'January': {\r\n                return 'Январь';\r\n            }\r\n            case 'February': {\r\n                return 'Февраль';\r\n            }\r\n            case 'March': {\r\n                return 'Март';\r\n            }\r\n            case 'April': {\r\n                return 'Апрель';\r\n            }\r\n            case 'May': {\r\n                return 'Май';\r\n            }\r\n            case 'June': {\r\n                return 'Июнь';\r\n            }\r\n            case 'July': {\r\n                return 'Июль';\r\n            }\r\n            case 'August': {\r\n                return 'Август';\r\n            }\r\n            case 'September': {\r\n                return 'Сентябрь';\r\n            }\r\n            case 'October': {\r\n                return 'Октябрь';\r\n            }\r\n            case 'November': {\r\n                return 'Ноябрь';\r\n            }\r\n            case 'December': {\r\n                return 'Декабрь';\r\n            }\r\n        }\r\n    };\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    moveMonth = (side) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(side, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    SelectList = (props) => {\r\n        const popup = props.monthList.map((monthName) => {\r\n            return (\r\n                <div key={monthName}>\r\n                    <p onClick={() => {this.setMonth(monthName)}}>\r\n                        {monthName}\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div id='month-select-popup'>\r\n                {popup}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onChangeMonth = () => {\r\n        this.setState({\r\n            showMonthPopup: !this.state.showMonthPopup\r\n        });\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span id='month-nav' onClick={()=> {this.onChangeMonth()}}>\r\n                {this.month()}\r\n                {this.state.showMonthPopup\r\n                    ? <this.SelectList monthList={this.months} />\r\n                    : null\r\n                }\r\n            </span>\r\n        );\r\n    };\r\n\r\n    showYearEditor = () => {\r\n        this.setState({\r\n            showYearNav: !this.state.showYearNav\r\n        });\r\n    };\r\n\r\n    setYear = (e) => {\r\n        const userInput = e.target.value;\r\n        if (/\\d+/.test(userInput)) {\r\n            let dateContext = Object.assign({}, this.state.dateContext);\r\n            dateContext = moment(dateContext).set(\"year\", e.target.value);\r\n            this.setState({\r\n                dateContext: dateContext\r\n            });\r\n        }\r\n    };\r\n\r\n    onKeyUpYear = (e) => {\r\n        if (e.which === 13 || e.which === 27) {\r\n            this.setYear(e);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav\r\n                ?\r\n                <span>\r\n                    <input\r\n                        defaultValue = {this.year()}\r\n                        onKeyUp={(e) => this.onKeyUpYear(e)}\r\n                        type=\"number\"\r\n                    />\r\n                    <button\r\n                        className='transparent-element no-border-element'\r\n                        onClick={() => {this.showYearEditor()}}\r\n                    >\r\n                        OK\r\n                    </button>\r\n                </span>\r\n                :\r\n                <span\r\n                    onClick={() => {this.showYearEditor()}}\r\n                    id='year-nav'\r\n                >\r\n                {this.year()}\r\n                </span>\r\n        );\r\n    };\r\n\r\n    onDayClick = (e, day) => {\r\n        if (e.target.className.indexOf('time-set-button') === -1 || !this.state.selectedDays.includes(day)) {\r\n            if (e.shiftKey) {\r\n                const additionDays = [];\r\n                const additionTimings = [];\r\n                if (this.state.lastChosenWithShift === null) {\r\n                    if (!this.state.selectedDays.includes(day)) {\r\n                        additionDays.push(day);\r\n                        additionTimings.push(new Timing(0, 0, 0, 0));\r\n                    }\r\n                    this.setState({\r\n                        lastChosenWithShift: day,\r\n                        selectedDays: [...this.state.selectedDays, ...additionDays],\r\n                        selectedTimings: [...this.state.selectedTimings, ...additionTimings]\r\n                    });\r\n                } else {\r\n                    if (this.state.lastChosenWithShift < day) {\r\n                        for (let i = this.state.lastChosenWithShift + 1; i <= day; i++) {\r\n                            if (!this.state.selectedDays.includes(i)) {\r\n                                additionDays.push(i);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let i = day; i <= this.state.lastChosenWithShift - 1; i++) {\r\n                            if (!this.state.selectedDays.includes(i)) {\r\n                                additionDays.push(i);\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({\r\n                        lastChosenWithShift: null,\r\n                        selectedDays: [...this.state.selectedDays, ...additionDays]\r\n                    })\r\n                }\r\n            } else {\r\n                const newSelectedDays = this.state.selectedDays.slice();\r\n                const index = newSelectedDays.indexOf(day);\r\n                if (index > -1) {\r\n                    newSelectedDays.splice(index, 1);\r\n                } else {\r\n                    newSelectedDays.push(day)\r\n                }\r\n                this.setState({\r\n                    selectedDays: newSelectedDays\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day} className='weekday'>{day}</td>\r\n            )\r\n        });\r\n\r\n        const blanks = [];\r\n        const realBlanksLen = +this.firstDayOfMonth() === 0 ? 7 : +this.firstDayOfMonth();\r\n        for (let i = 1; i < realBlanksLen; i++) {\r\n            blanks.push(<td key={i * 80}>{\"\"}</td>);\r\n        }\r\n\r\n        const daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let dayClass = 'day';\r\n            if (this.state.selectedDays.includes(d)) {\r\n                dayClass += ' selected-day';\r\n            } else {\r\n                dayClass += ' non-selected-day';\r\n                const dayOfWeek = (blanks.length + d) % 7;\r\n                dayClass += (dayOfWeek === 0 || dayOfWeek === 6) ? ' non-selected-weekend' : ' non-selected-weekday'\r\n            }\r\n            daysInMonth.push(\r\n                <td\r\n                    key={d} onClick={(e)=>{this.onDayClick(e, d)}}\r\n                    className={dayClass}\r\n                >\r\n                    {d}\r\n                    <button\r\n                        className={this.getTimeSetButtonClass(d)}\r\n                        onClick={(e) => {this.timeSetButton(e, d)}}>\r\n                    </button>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        const totalSlots = [...blanks, ...daysInMonth];\r\n        const rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                rows.push(cells.slice());\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                rows.push(cells.slice());\r\n            }\r\n        });\r\n\r\n        const trElements = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i*100}>\r\n                    {d}\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div id='calendar-container'>\r\n                <table id='calendar-table'>\r\n                    <thead>\r\n                    <tr>\r\n                        <td colSpan=\"5\">\r\n                            <this.MonthNav />\r\n                            {\" \"}\r\n                            <this.YearNav />\r\n                        </td>\r\n                        <td colSpan=\"2\">\r\n                            <button onClick={()=> {this.moveMonth(-1)}}>prev</button>\r\n                            <button onClick={()=> {this.moveMonth(1)}}>next</button>\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        {weekdays}\r\n                    </tr>\r\n                    {trElements}\r\n                    </tbody>\r\n                </table>\r\n                <TimeSelectDialogue whereToShow={this.state.timeSelectDialogue} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    timeSetButton = (e, day) => {\r\n        if (!e.shiftKey) {\r\n            this.setState({\r\n                timeSelectDialogue: day\r\n            })\r\n        }\r\n    };\r\n\r\n    getTimeSetButtonClass = (day) => {\r\n        return this.state.selectedDays.includes(day)\r\n            ? 'time-set-button time-set-button-orange'\r\n            : 'time-set-button time-set-button-white'\r\n    }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}