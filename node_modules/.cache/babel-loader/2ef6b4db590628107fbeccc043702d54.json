{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\SelectList.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SelectList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.pos = {\n      left: this.props.left != null ? this.props.left + 'px' : 'auto',\n      top: this.props.top != null ? this.props.top + 'px' : 'auto'\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.props.clickOutside, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.props.clickOutside, false);\n  }\n\n  render() {\n    const popup = this.props.options.map(option => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: option.rusName,\n        className: \"hover-text select-item\",\n        id: option.rusName,\n        onClick: () => {\n          this.props.onChoose(option);\n        },\n        onMouseEnter: () => console.log(document.getElementById(option.rusName).scrollWidth),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, option.rusName, option.additional);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-popup\",\n      style: this.pos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, popup);\n  }\n\n}\n\nSelectList.propTypes = {\n  options: PropTypes.array.isRequired,\n  onChoose: PropTypes.func.isRequired,\n  clickOutside: PropTypes.func.isRequired,\n  left: PropTypes.number,\n  top: PropTypes.number\n};\nexport default SelectList;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/SelectList.js"],"names":["React","Component","PropTypes","SelectList","pos","left","props","top","componentDidMount","document","addEventListener","clickOutside","componentWillUnmount","removeEventListener","render","popup","options","map","option","rusName","onChoose","console","log","getElementById","scrollWidth","additional","propTypes","array","isRequired","func","number"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAU/BG,GAV+B,GAUzB;AACFC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAX,IAAmB,IAAnB,GAA0B,KAAKC,KAAL,CAAWD,IAAX,GAAkB,IAA5C,GAAmD,MADvD;AAEFE,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAAX,IAAkB,IAAlB,GAAyB,KAAKD,KAAL,CAAWC,GAAX,GAAiB,IAA1C,GAAiD;AAFpD,KAVyB;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKJ,KAAL,CAAWK,YAA9C,EAA4D,KAA5D;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnBH,IAAAA,QAAQ,CAACI,mBAAT,CAA6B,OAA7B,EAAsC,KAAKP,KAAL,CAAWK,YAAjD,EAA+D,KAA/D;AACH;;AAODG,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,KAAKT,KAAL,CAAWU,OAAX,CAAmBC,GAAnB,CAAwBC,MAAD,IAAY;AAC7C,0BACI;AACI,QAAA,GAAG,EAAEA,MAAM,CAACC,OADhB;AAEI,QAAA,SAAS,EAAC,wBAFd;AAGI,QAAA,EAAE,EAAED,MAAM,CAACC,OAHf;AAII,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKb,KAAL,CAAWc,QAAX,CAAoBF,MAApB;AAA4B,SAJhD;AAKI,QAAA,YAAY,EAAE,MAAMG,OAAO,CAACC,GAAR,CAAYb,QAAQ,CAACc,cAAT,CAAwBL,MAAM,CAACC,OAA/B,EAAwCK,WAApD,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOKN,MAAM,CAACC,OAPZ,EAQKD,MAAM,CAACO,UARZ,CADJ;AAYH,KAba,CAAd;AAcA,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE,KAAKrB,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKW,KADL,CADJ;AAKH;;AAnC8B;;AAsCnCZ,UAAU,CAACuB,SAAX,GAAuB;AACnBV,EAAAA,OAAO,EAAEd,SAAS,CAACyB,KAAV,CAAgBC,UADN;AAEnBR,EAAAA,QAAQ,EAAElB,SAAS,CAAC2B,IAAV,CAAeD,UAFN;AAGnBjB,EAAAA,YAAY,EAAET,SAAS,CAAC2B,IAAV,CAAeD,UAHV;AAInBvB,EAAAA,IAAI,EAAEH,SAAS,CAAC4B,MAJG;AAKnBvB,EAAAA,GAAG,EAAEL,SAAS,CAAC4B;AALI,CAAvB;AAQA,eAAe3B,UAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SelectList extends Component {\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('click', this.props.clickOutside, false);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('click', this.props.clickOutside, false);\r\n    }\r\n\r\n    pos = {\r\n        left: this.props.left != null ? this.props.left + 'px' : 'auto',\r\n        top: this.props.top != null ? this.props.top + 'px' : 'auto'\r\n    };\r\n\r\n    render() {\r\n        const popup = this.props.options.map((option) => {\r\n            return (\r\n                <p\r\n                    key={option.rusName}\r\n                    className='hover-text select-item'\r\n                    id={option.rusName}\r\n                    onClick={() => {this.props.onChoose(option)}}\r\n                    onMouseEnter={() => console.log(document.getElementById(option.rusName).scrollWidth)}\r\n                >\r\n                    {option.rusName}\r\n                    {option.additional}\r\n                </p>\r\n            );\r\n        });\r\n        return (\r\n            <div className='select-popup' style={this.pos}>\r\n                {popup}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSelectList.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    onChoose: PropTypes.func.isRequired,\r\n    clickOutside: PropTypes.func.isRequired,\r\n    left: PropTypes.number,\r\n    top: PropTypes.number\r\n};\r\n\r\nexport default SelectList;"]},"metadata":{},"sourceType":"module"}