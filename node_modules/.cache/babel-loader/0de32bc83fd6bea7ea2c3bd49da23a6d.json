{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\components\\\\Calendar.js\";\nimport React from 'react';\nimport moment from 'moment';\nexport default class Calendar extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dateContext: moment(),\n      today: moment(),\n      showMonthPopup: false,\n      showYearPopup: false,\n      selectedDay: null\n    };\n    this.weekdaysShort = moment.weekdaysShort();\n    this.months = moment.months();\n\n    this.year = () => this.state.dateContext.format(\"Y\");\n\n    this.month = () => this.state.dateContext.format(\"MMMM\");\n\n    this.daysInMonth = () => this.state.dateContext.daysInMonth();\n\n    this.currentDay = () => this.state.dateContext.format(\"D\");\n\n    this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\n\n    this.setMonth = month => {\n      const monthNo = this.months.indexOf(month);\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"month\", monthNo);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.moveMonth = (e, side) => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).add(side, \"month\");\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.onSelectChange = (e, data) => {\n      this.setMonth(data);\n    };\n\n    this.SelectList = props => {\n      let popup = props.monthList.map(monthName => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: monthName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          onClick: this.onSelectChange(monthName),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }\n        }, monthName));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"month-popup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, popup);\n    };\n\n    this.onChangeMonth = (e, month) => {\n      this.setState({\n        showMonthPopup: !this.state.showMonthPopup\n      });\n    };\n\n    this.MonthNav = () => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label-month\",\n        onClick: e => {\n          this.onChangeMonth(e, this.month());\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }, this.month(), this.state.showMonthPopup && /*#__PURE__*/React.createElement(this.SelectList, {\n        monthList: this.months,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.showYearEditor = () => {\n      this.setState({\n        showYearNav: true\n      });\n    };\n\n    this.setYear = year => {\n      let dateContext = Object.assign({}, this.state.dateContext);\n      dateContext = moment(dateContext).set(\"year\", year);\n      this.setState({\n        dateContext: dateContext\n      });\n    };\n\n    this.onYearChange = e => {\n      this.setYear(e.target.value);\n      this.props.onYearChange && this.props.onYearChange(e, e.target.value);\n    };\n\n    this.onKeyUpYear = e => {\n      if (e.which === 13 || e.which === 27) {\n        this.setYear(e.target.value);\n        this.setState({\n          showYearNav: false\n        });\n      }\n    };\n\n    this.YearNav = () => {\n      return this.state.showYearNav ? /*#__PURE__*/React.createElement(\"input\", {\n        defaultValue: this.year(),\n        className: \"editor-year\",\n        ref: yearInput => {\n          this.yearInput = yearInput;\n        },\n        onKeyUp: e => this.onKeyUpYear(e),\n        onChange: e => this.onYearChange(e),\n        type: \"number\",\n        placeholder: \"year\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"label-year\",\n        onDoubleClick: e => {\n          this.showYearEditor();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, this.year());\n    };\n\n    this.onDayClick = (e, day) => {\n      this.setState({\n        selectedDay: day\n      }, () => {\n        console.log(\"SELECTED DAY: \", this.state.selectedDay);\n      });\n      this.props.onDayClick && this.props.onDayClick(e, day);\n    };\n  }\n\n  render() {\n    // Map the weekdays i.e Sun, Mon, Tue etc as <td>\n    let weekdays = this.weekdaysShort.map(day => {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: day,\n        className: \"week-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: i * 80,\n        className: \"emptySlot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, \"\"));\n    }\n\n    console.log(\"blanks: \", blanks);\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = d == this.currentDay() ? \"day current-day\" : \"day\";\n      let selectedClass = d === this.state.selectedDay ? \" selected-day \" : \"\";\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        className: className + selectedClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: e => {\n          this.onDayClick(e, d);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, d)));\n    }\n\n    console.log(\"days: \", daysInMonth);\n    const totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n    let trElems = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: i * 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }\n      }, d);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar-container\",\n      style: this.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"calendar-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(this.MonthNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }), \" \", /*#__PURE__*/React.createElement(this.YearNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"2\",\n      className: \"nav-month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.moveMonth(this, -1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, \"next\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.moveMonth(this, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }, \"prev\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, weekdays), trElems)));\n  }\n\n}","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/components/Calendar.js"],"names":["React","moment","Calendar","Component","state","dateContext","today","showMonthPopup","showYearPopup","selectedDay","weekdaysShort","months","year","format","month","daysInMonth","currentDay","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","moveMonth","e","side","add","onSelectChange","data","SelectList","props","popup","monthList","map","monthName","onChangeMonth","MonthNav","showYearEditor","showYearNav","setYear","onYearChange","target","value","onKeyUpYear","which","YearNav","yearInput","onDayClick","day","console","log","render","weekdays","blanks","i","push","d","className","selectedClass","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","style"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default class Calendar extends React.Component {\r\n    state = {\r\n        dateContext: moment(),\r\n        today: moment(),\r\n        showMonthPopup: false,\r\n        showYearPopup: false,\r\n        selectedDay: null\r\n    };\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.width = props.width || \"350px\";\r\n    //     this.style = props.style || {};\r\n    //     this.style.width = this.width; // add this\r\n    // }\r\n\r\n    weekdaysShort = moment.weekdaysShort(); // [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]\r\n    months = moment.months();\r\n\r\n    year = () => this.state.dateContext.format(\"Y\");\r\n\r\n    month = () => this.state.dateContext.format(\"MMMM\");\r\n\r\n    daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n    currentDay = () => this.state.dateContext.format(\"D\");\r\n\r\n    firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n    setMonth = (month) => {\r\n        const monthNo = this.months.indexOf(month);\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"month\", monthNo);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    moveMonth = (e, side) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(side, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n    };\r\n\r\n    onSelectChange = (e, data) => {\r\n        this.setMonth(data);\r\n    };\r\n\r\n    SelectList = (props) => {\r\n        let popup = props.monthList.map((monthName) => {\r\n            return (\r\n                <div key={monthName}>\r\n                    <p onClick={this.onSelectChange(monthName)}>\r\n                        {monthName}\r\n                    </p>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"month-popup\">\r\n                {popup}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    onChangeMonth = (e, month) => {\r\n        this.setState({\r\n            showMonthPopup: !this.state.showMonthPopup\r\n        });\r\n    };\r\n\r\n    MonthNav = () => {\r\n        return (\r\n            <span className=\"label-month\"\r\n                  onClick={(e)=> {this.onChangeMonth(e, this.month())}}>\r\n                {this.month()}\r\n                {this.state.showMonthPopup &&\r\n                <this.SelectList monthList={this.months} />\r\n                }\r\n            </span>\r\n        );\r\n    };\r\n\r\n    showYearEditor = () => {\r\n        this.setState({\r\n            showYearNav: true\r\n        });\r\n    };\r\n\r\n    setYear = (year) => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).set(\"year\", year);\r\n        this.setState({\r\n            dateContext: dateContext\r\n        })\r\n    };\r\n\r\n    onYearChange = (e) => {\r\n        this.setYear(e.target.value);\r\n        this.props.onYearChange && this.props.onYearChange(e, e.target.value);\r\n    };\r\n\r\n    onKeyUpYear = (e) => {\r\n        if (e.which === 13 || e.which === 27) {\r\n            this.setYear(e.target.value);\r\n            this.setState({\r\n                showYearNav: false\r\n            })\r\n        }\r\n    };\r\n\r\n    YearNav = () => {\r\n        return (\r\n            this.state.showYearNav ?\r\n                <input\r\n                    defaultValue = {this.year()}\r\n                    className=\"editor-year\"\r\n                    ref={(yearInput) => { this.yearInput = yearInput}}\r\n                    onKeyUp= {(e) => this.onKeyUpYear(e)}\r\n                    onChange = {(e) => this.onYearChange(e)}\r\n                    type=\"number\"\r\n                    placeholder=\"year\"/>\r\n                :\r\n                <span\r\n                    className=\"label-year\"\r\n                    onDoubleClick={(e)=> { this.showYearEditor()}}>\r\n                {this.year()}\r\n            </span>\r\n        );\r\n    };\r\n\r\n    onDayClick = (e, day) => {\r\n        this.setState({\r\n            selectedDay: day\r\n        }, () => {\r\n            console.log(\"SELECTED DAY: \", this.state.selectedDay);\r\n        });\r\n\r\n        this.props.onDayClick && this.props.onDayClick(e, day);\r\n    };\r\n\r\n    render() {\r\n        // Map the weekdays i.e Sun, Mon, Tue etc as <td>\r\n        let weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day} className=\"week-day\">{day}</td>\r\n            )\r\n        });\r\n\r\n        let blanks = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(<td key={i * 80} className=\"emptySlot\">\r\n                    {\"\"}\r\n                </td>\r\n            );\r\n        }\r\n\r\n        console.log(\"blanks: \", blanks);\r\n\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let className = (d == this.currentDay() ? \"day current-day\": \"day\");\r\n            let selectedClass = (d === this.state.selectedDay ? \" selected-day \" : \"\")\r\n            daysInMonth.push(\r\n                <td key={d} className={className + selectedClass} >\r\n                    <span onClick={(e)=>{this.onDayClick(e, d)}}>{d}</span>\r\n                </td>\r\n            );\r\n        }\r\n\r\n\r\n        console.log(\"days: \", daysInMonth);\r\n\r\n        const totalSlots = [...blanks, ...daysInMonth];\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                let insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n            }\r\n            if (i === totalSlots.length - 1) {\r\n                let insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n            }\r\n        });\r\n\r\n        let trElems = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i*100}>\r\n                    {d}\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"calendar-container\" style={this.style}>\r\n                <table className=\"calendar\">\r\n                    <thead>\r\n                    <tr className=\"calendar-header\">\r\n                        <td colSpan=\"5\">\r\n                            <this.MonthNav />\r\n                            {\" \"}\r\n                            <this.YearNav />\r\n                        </td>\r\n                        <td colSpan=\"2\" className=\"nav-month\">\r\n                            <button onClick={this.moveMonth(this, -1)}>next</button>\r\n                            <button onClick={this.moveMonth(this, 1)}>prev</button>\r\n                        </td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        {weekdays}\r\n                    </tr>\r\n                    {trElems}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}