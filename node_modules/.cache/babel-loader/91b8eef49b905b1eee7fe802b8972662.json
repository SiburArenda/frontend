{"ast":null,"code":"var _jsxFileName = \"C:\\\\My\\\\Projects\\\\Web\\\\sibur_arenda_1.0\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport './resource/styles/Main.css';\nimport ClientNavList from \"./components/client/ClientNavList\";\nimport AdminNavList from \"./components/admin/AdminNavList\";\nimport ClientMainContent from \"./components/client/ClientMainContent\";\nimport AdminMainContent from \"./components/admin/AdminMainContent\";\nimport Hint from \"./components/client/Hint\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      logInFormVisible: false,\n      applicationFormVisible: false,\n      showHint: false,\n      whichHint: '',\n      hintX: 0,\n      hintY: 0\n    };\n\n    this.getHintText = () => {\n      if (this.state.whichHint.startsWith('fullName&')) {\n        return this.state.whichHint.substring(9);\n      }\n\n      if (this.state.whichHint.startsWith('interval')) {\n        const split = this.state.whichHint.split('%');\n        return `Пожалуйста, введите число от ${split[1]} до ${split[2]}`;\n      }\n\n      switch (this.state.whichHint) {\n        case 'closeAppFormBtn':\n          return 'Если Вы закроете неотправленную заявку, введённая информация не сохранится';\n\n        case 'minAppFormBtn':\n          return 'Свернуть';\n\n        case 'expAppFormBtn':\n          return 'Открыть форму';\n\n        case 'openAppFormBtn':\n          return 'Окно заполнения заявки откроется параллельно с остальным содержимым сервиса' + ' - Вы сможете переходить по разделам, не закрывая его и не заполняя заново!';\n\n        case 'sendAppBtn':\n          return 'Заявка будет отправлена, но Вы всегда сможете отредактировать её:' + ' просто отыщите её в Отправленных Заявках в Вашем профиле';\n\n        case 'intPosNum':\n          return 'Пожалуйста, введите целое положительное число';\n\n        case 'clearCalendar':\n          return 'Все выбранные даты и временные рамки для них будут сброшены';\n\n        case 'timeSet':\n          return 'Установить временные рамки для этой даты';\n\n        default:\n          return '';\n      }\n    };\n\n    this.showHint = (e, which) => {\n      this.setState({\n        showHint: true,\n        whichHint: which,\n        hintX: +e.clientX,\n        hintY: +e.clientY\n      });\n    };\n\n    this.closeHint = () => {\n      this.setState({\n        showHint: false\n      });\n    };\n\n    this.openApplicationForm = () => {\n      this.setState({\n        applicationFormVisible: true\n      });\n    };\n\n    this.openLogInForm = () => {\n      this.setState({\n        logInFormVisible: true\n      });\n    };\n\n    this.closeApplicationForm = () => {\n      this.setState({\n        applicationFormVisible: false\n      });\n    };\n\n    this.closeLogInForm = () => {\n      this.setState({\n        logInFormVisible: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: /^\\/(?!admin).*/,\n      render: () => /*#__PURE__*/React.createElement(\"button\", {\n        id: \"open-log-in-button\",\n        onClick: () => {\n          this.openLogInForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 37\n        }\n      }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438 \\u043A\\u0430\\u043A \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\")), /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"main-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: /^\\/(?!admin).*/,\n      render: props => /*#__PURE__*/React.createElement(ClientNavList, Object.assign({}, props, {\n        openApplicationForm: this.openApplicationForm,\n        showHint: this.showHint,\n        closeHint: this.closeHint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin\",\n      render: props => /*#__PURE__*/React.createElement(AdminNavList, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 49\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"section\", {\n      id: \"main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: /^\\/(?!admin).*/,\n      render: props => /*#__PURE__*/React.createElement(ClientMainContent, Object.assign({}, props, {\n        logInFormVisible: this.state.logInFormVisible,\n        applicationFormVisible: this.state.applicationFormVisible,\n        closeLogInForm: this.closeLogInForm,\n        closeAppWindow: this.closeApplicationForm,\n        showHint: this.showHint,\n        closeHint: this.closeHint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/admin\",\n      render: props => /*#__PURE__*/React.createElement(AdminMainContent, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), this.state.showHint ? /*#__PURE__*/React.createElement(Hint, {\n      hintText: this.getHintText(),\n      x: this.state.hintX,\n      y: this.state.hintY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }) : null));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/My/Projects/Web/sibur_arenda_1.0/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","ClientNavList","AdminNavList","ClientMainContent","AdminMainContent","Hint","App","state","logInFormVisible","applicationFormVisible","showHint","whichHint","hintX","hintY","getHintText","startsWith","substring","split","e","which","setState","clientX","clientY","closeHint","openApplicationForm","openLogInForm","closeApplicationForm","closeLogInForm","render","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\"\r\nimport './resource/styles/Main.css'\r\nimport ClientNavList from \"./components/client/ClientNavList\";\r\nimport AdminNavList from \"./components/admin/AdminNavList\";\r\nimport ClientMainContent from \"./components/client/ClientMainContent\";\r\nimport AdminMainContent from \"./components/admin/AdminMainContent\";\r\nimport Hint from \"./components/client/Hint\";\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        logInFormVisible: false,\r\n        applicationFormVisible: false,\r\n        showHint: false,\r\n        whichHint: '',\r\n        hintX: 0,\r\n        hintY: 0\r\n    };\r\n\r\n    getHintText = () => {\r\n\r\n        if (this.state.whichHint.startsWith('fullName&')) {\r\n            return this.state.whichHint.substring(9)\r\n        }\r\n\r\n        if (this.state.whichHint.startsWith('interval')) {\r\n            const split = this.state.whichHint.split('%');\r\n            return `Пожалуйста, введите число от ${split[1]} до ${split[2]}`;\r\n        }\r\n\r\n        switch (this.state.whichHint) {\r\n            case 'closeAppFormBtn':\r\n                return 'Если Вы закроете неотправленную заявку, введённая информация не сохранится';\r\n            case 'minAppFormBtn':\r\n                return 'Свернуть';\r\n            case 'expAppFormBtn':\r\n                return 'Открыть форму';\r\n            case 'openAppFormBtn':\r\n                return 'Окно заполнения заявки откроется параллельно с остальным содержимым сервиса' +\r\n                    ' - Вы сможете переходить по разделам, не закрывая его и не заполняя заново!';\r\n            case 'sendAppBtn':\r\n                return 'Заявка будет отправлена, но Вы всегда сможете отредактировать её:' +\r\n                    ' просто отыщите её в Отправленных Заявках в Вашем профиле';\r\n            case 'intPosNum':\r\n                return 'Пожалуйста, введите целое положительное число';\r\n            case 'clearCalendar':\r\n                return 'Все выбранные даты и временные рамки для них будут сброшены';\r\n            case 'timeSet':\r\n                return 'Установить временные рамки для этой даты';\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    showHint = (e, which) => {\r\n        this.setState({\r\n            showHint: true,\r\n            whichHint: which,\r\n            hintX: +e.clientX,\r\n            hintY: +e.clientY\r\n        })\r\n    };\r\n\r\n    closeHint = () => {\r\n        this.setState({\r\n            showHint: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n\r\n                <header>\r\n                    <Route\r\n                        path={/^\\/(?!admin).*/}\r\n                        render=\r\n                            {\r\n                                () => (\r\n                                    <button\r\n                                        id='open-log-in-button'\r\n                                        onClick={() => {\r\n                                            this.openLogInForm()\r\n                                        }}>Войти\r\n                                    </button>\r\n                                )\r\n                            }\r\n                    />\r\n                    <Link to='/admin'>Войти как администратор</Link>\r\n                </header>\r\n\r\n                <nav>\r\n                    <ul id='main-nav'>\r\n                        <Route\r\n                            path={/^\\/(?!admin).*/}\r\n                            render={(props) => (\r\n                                <ClientNavList\r\n                                    {...props}\r\n                                    openApplicationForm={this.openApplicationForm}\r\n                                    showHint={this.showHint}\r\n                                    closeHint={this.closeHint}\r\n                                />\r\n                                )\r\n                            }\r\n                        />\r\n                        <Route\r\n                            path='/admin'\r\n                            render={(props) => (<AdminNavList {...props}/>)}\r\n                        />\r\n                    </ul>\r\n                </nav>\r\n\r\n                <section id='main-content'>\r\n                    <Route\r\n                        path={/^\\/(?!admin).*/}\r\n                        render=\r\n                            {\r\n                                (props) => (\r\n                                    <ClientMainContent\r\n                                        {...props}\r\n                                        logInFormVisible={this.state.logInFormVisible}\r\n                                        applicationFormVisible={this.state.applicationFormVisible}\r\n                                        closeLogInForm={this.closeLogInForm}\r\n                                        closeAppWindow={this.closeApplicationForm}\r\n                                        showHint={this.showHint}\r\n                                        closeHint={this.closeHint}\r\n                                    />\r\n                                )\r\n                            }\r\n                    />\r\n                    <Route\r\n                        path='/admin'\r\n                        render=\r\n                            {\r\n                                (props) => (\r\n                                    <AdminMainContent\r\n                                        {...props}\r\n                                    />\r\n                                )\r\n                            }\r\n                    />\r\n                    {this.state.showHint\r\n                        ?\r\n                        <Hint\r\n                            hintText={this.getHintText()}\r\n                            x={this.state.hintX}\r\n                            y={this.state.hintY}\r\n                        />\r\n                        : null\r\n                    }\r\n                </section>\r\n\r\n            </Router>\r\n        );\r\n    }\r\n\r\n    openApplicationForm = () => {\r\n        this.setState({\r\n            applicationFormVisible: true\r\n        })\r\n    };\r\n\r\n    openLogInForm = () => {\r\n        this.setState({\r\n            logInFormVisible: true\r\n        })\r\n    };\r\n\r\n    closeApplicationForm = () => {\r\n        this.setState({\r\n            applicationFormVisible: false\r\n        })\r\n    };\r\n\r\n    closeLogInForm = () => {\r\n        this.setState({\r\n            logInFormVisible: false\r\n        })\r\n    };\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}